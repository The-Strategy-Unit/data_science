---
title: Presentations
format:
  html: 
    grid:
      sidebar-width: 200px
      body-width: 1100px
      margin-width: 200px
      gutter-width: 1.5rem
---

```{r}
#| echo: false

# note: if you are running interactively then you will be in /
# but quarto will be running this in /presentations

path <- if (!getwd() |> stringr::str_ends("presentations")) {
  path <- "presentations"
} else {
  path <- "."
}

dir(path, pattern = "index.qmd", recursive = TRUE, full.names = TRUE) |>
  stringr::str_subset(paste0("^", path, "/index.qmd$"), TRUE) |>
  purrr::set_names() |>
  purrr::map(
    \(f) {
      i <- readr::read_lines(f)
      i <- i[do.call(seq, as.list(which(i == "---")[1:2] + c(1, -1)))]
      yaml::read_yaml(text = i) |>
        purrr::keep(is.atomic) |>
        tibble::as_tibble()
    }
  ) |>
  dplyr::bind_rows(.id = "filename") |>
  dplyr::mutate(
    dplyr::across(
      "author",
      \(.x) stringr::str_replace_all(.x, "\\[([^\\]]*)\\]\\([^\\)]*\\)", "\\1")
    ),
    dplyr::across(
      "date",
      lubridate::ymd
    ),
    title = purrr::map(
      paste0(
        "<a href='", filename, "'>",
        ifelse(
          is.na(subtitle),
          title,
          paste0(title, ": ", subtitle)
        ),
        "</a>"
      ),
      gt::html
    )
  ) |>
  dplyr::select(-"date-format", -"subtitle", -"filename") |>
  dplyr::arrange(desc(date)) |>
  gt::gt() |>
  gt::cols_align("left") |>
  gt::cols_width(
    title ~ px(650),
    author ~ px(150),
    date ~ px(100)
  ) |>
  gt::tab_style(style = gt::cell_text(weight = "bold"), locations = gt::cells_column_labels(columns = everything())) |>
  gt::cols_label(
    starts_with("date") ~ "Date",
    starts_with("author") ~ "Author",
    starts_with("title") ~ "Title"
  )
```
