<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Data Science @ The Strategy Unit</title>
<link>https://the-strategy-unit.github.io/data_science/blogs/</link>
<atom:link href="https://the-strategy-unit.github.io/data_science/blogs/index.xml" rel="self" type="application/rss+xml"/>
<description>Blogs from the Data Science Team at The Strategy Unit</description>
<generator>quarto-1.5.57</generator>
<lastBuildDate>Tue, 12 Nov 2024 00:00:00 GMT</lastBuildDate>
<item>
  <title>Using GitHub to plan and organise Coffee &amp; Coding</title>
  <dc:creator>YiWen Hon</dc:creator>
  <link>https://the-strategy-unit.github.io/data_science/blogs/posts/2024-11-12_coffee-coding-github-planner/</link>
  <description><![CDATA[ 




<section id="coffee-coding" class="level2">
<h2 class="anchored" data-anchor-id="coffee-coding">Coffee &amp; Coding</h2>
<p>Coffee &amp; Coding is a fortnightly hour-long session organised by the Data Science team, open to all members of the Strategy Unit with an interest in coding. It‚Äôs been <a href="../../../blogs/posts/2024-05-13_one-year-coffee-code/index.html" target="_blank">well received</a> and is a valued source of professional development and general geekery in the team.</p>
<p>We‚Äôve been experimenting with using <a href="https://github.com/">GitHub</a> as an organisational tool for our team‚Äôs work, and are testing the same approach for Coffee &amp; Coding sessions as well. Previously, future Coffee &amp; Coding sessions were haphazardly listed in a Google Doc that was only accessible to members of the Data Science team, and we wanted a more open approach. We also didn‚Äôt have a good record of topics that were previously covered.</p>
<p>You‚Äôll need a GitHub account to enjoy the full functionality of the planner. If you need help setting this up, get in touch with any member of the Data Science team.</p>
<p>Any feedback on this new system for organising and planning Coffee &amp; Coding is very welcome! Hope you enjoy using it.</p>
</section>
<section id="viewing-upcoming-sessions" class="level2">
<h2 class="anchored" data-anchor-id="viewing-upcoming-sessions">Viewing upcoming sessions</h2>
<p>We have created <a href="https://github.com/orgs/The-Strategy-Unit/projects/14/views/1">a fully open GitHub project for tracking Coffee &amp; Coding sessions</a>. Any sessions with scheduled dates can be seen in the ‚ÄúUpcoming sessions‚Äù view. Clicking on a session title brings up more information, including a brief overview of the session and the people running it. Users with GitHub accounts can make comments or post emoji reactions.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://the-strategy-unit.github.io/data_science/blogs/posts/2024-11-12_coffee-coding-github-planner/upcoming-sessions.gif" class="img-fluid figure-img" alt="A short clip showing a person clicking on an upcoming session title. A pop up box appears with more information"></p>
<figcaption>Viewing upcoming session details</figcaption>
</figure>
</div>
</section>
<section id="adding-session-ideas" class="level2">
<h2 class="anchored" data-anchor-id="adding-session-ideas">Adding session ideas</h2>
<p>To add a session idea:</p>
<ol type="1">
<li><a href="https://github.com/The-Strategy-Unit/data_science/issues/new?template=Blank+issue">Create a new issue</a> on the <a href="https://github.com/The-Strategy-Unit/data_science">data_science repository</a>. Provide a useful title and description for the session.</li>
<li>Give your new issue the label C&amp;C‚òï</li>
<li>If you would like to run or contribute to the session, assign yourself to it.</li>
<li>Click ‚ÄúCreate‚Äù to save your session idea as a GitHub issue. You should then be able to see it listed as a ‚ÄúPotential session‚Äù on the planner, and others will be able to view, vote for, and comment on your session idea.</li>
</ol>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://the-strategy-unit.github.io/data_science/blogs/posts/2024-11-12_coffee-coding-github-planner/creating-session.gif" class="img-fluid figure-img" alt="A short clip showing a person creating a new session idea as a GitHub issue, and giving it a title, description, and label"></p>
<figcaption>Adding a session idea</figcaption>
</figure>
</div>
</section>
<section id="voting-for-session-ideas" class="level2">
<h2 class="anchored" data-anchor-id="voting-for-session-ideas">Voting for session ideas</h2>
<p>We will use thumbs up (üëç) emoji reactions to suggested sessions as a voting system to help us with planning and scheduling.</p>
<p>If you see any potential sessions that you are interested in, react to them with a thumbs up emoji. You can see all planned sessions, in order of votes received, <a href="https://github.com/The-Strategy-Unit/data_science/issues?q=is%3Aissue%20state%3Aopen%20label%3A%22C%26C%20%E2%98%95%22%20sort%3Areactions-%2B1-desc">listed here</a>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://the-strategy-unit.github.io/data_science/blogs/posts/2024-11-12_coffee-coding-github-planner/voting-for-session.gif" class="img-fluid figure-img" alt="A short clip showing a person reacting to a GitHub issue with a thumbs up emoji"></p>
<figcaption>Voting for a session idea</figcaption>
</figure>
</div>


</section>

 ]]></description>
  <category>GitHub</category>
  <category>learning</category>
  <guid>https://the-strategy-unit.github.io/data_science/blogs/posts/2024-11-12_coffee-coding-github-planner/</guid>
  <pubDate>Tue, 12 Nov 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Map and Nest</title>
  <dc:creator>Rhian Davies</dc:creator>
  <link>https://the-strategy-unit.github.io/data_science/blogs/posts/2024-08-08_map-and-nest/</link>
  <description><![CDATA[ 




<p>I want to share a framework that I like using occasionally for data analysis. It‚Äôs the nest-and-map and it‚Äôs helped me countless times when I‚Äôm working with related datasets. By combining <a href="https://purrr.tidyverse.org/">{purrr}</a> mapping with <a href="https://tidyr.tidyverse.org/">{tidyr}</a> nesting, I can keep my analysis steps linked, allowing me to easily track from a summary or plot, back to the original data.</p>
<p>The main funtions we‚Äôll need are</p>
<ul>
<li><code>tidyr::nest()</code></li>
<li><code>dplyr::mutate()</code></li>
<li><code>purrr::map()</code></li>
<li><code>purrr::walk()</code></li>
</ul>
<section id="example-on-nhs-workforce-statistics" class="level2">
<h2 class="anchored" data-anchor-id="example-on-nhs-workforce-statistics">Example on NHS workforce statistics</h2>
<p>The <a href="https://digital.nhs.uk/data-and-information/publications/statistical/nhs-workforce-statistics">NHS workforce statistics</a> are official statistics published monthly for England.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">staff_group <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">readRDS</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"workforce_staff_group.rds"</span>)</span></code></pre></div>
</div>
<p>I want to perform an analysis for each of the 42 integrated care systems (ICS). The {tidyr} <code>nest()</code> function creates a list-column, where each cell contains a mini dataframe for each grouping.</p>
<p>Let‚Äôs group by ICS, and call the nested data column <code>raw_data</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">group_by_ics <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> staff_group <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-2">    tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nest</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">raw_data =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>ics_name)</span></code></pre></div>
</div>
<p>The new column is a list-column, with each cell containing an entire tibble of data relating to that individual ICS.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' echo: false</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(group_by_ics)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 √ó 2
  ics_name             raw_data         
  &lt;chr&gt;                &lt;list&gt;           
1 South East London    &lt;tibble [8 √ó 6]&gt; 
2 North East London    &lt;tibble [7 √ó 6]&gt; 
3 North Central London &lt;tibble [12 √ó 6]&gt;
4 North West London    &lt;tibble [10 √ó 6]&gt;
5 South West London    &lt;tibble [8 √ó 6]&gt; 
6 Devon                &lt;tibble [7 √ó 6]&gt; </code></pre>
</div>
</div>
<p>We can grab these mini datasets in the usual way and explore them interactively.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">group_by_ics<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>raw_data[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 8 √ó 6
  organisation_name           total hchs_doctors nurses_health_visitors midwives
  &lt;chr&gt;                       &lt;dbl&gt;        &lt;dbl&gt;                  &lt;dbl&gt;    &lt;dbl&gt;
1 Total                       58394         7108                  14939      926
2 Guy's and St Thomas' NHS F‚Ä¶ 21361         3003                   6196      281
3 King's College Hospital NH‚Ä¶ 13158         2443                   4202      375
4 Lewisham and Greenwich NHS‚Ä¶  6617          979                   2103      271
5 London Ambulance Service N‚Ä¶  7050            4                     44        0
6 NHS South East London ICB     617            9                     43        0
7 Oxleas NHS Foundation Trust  4094          200                   1196        0
8 South London and Maudsley ‚Ä¶  5496          471                   1155        0
# ‚Ñπ 1 more variable: ambulance_staff &lt;dbl&gt;</code></pre>
</div>
</div>
<p>Next, let‚Äôs apply some simple processing, say converting absolute numbers into percentages, to each of the ICSs in turn.</p>
<p>We use <code>mutate()</code> to create a new list-column <code>staff_percent</code> and <code>map()</code> to apply the processing function to each cell in turn. <sup>1</sup></p>
<details>
<summary>
See function definition for <code>convert_percent()</code>
</summary>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' Convert percent</span></span>
<span id="cb7-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @param raw_staff Tibble containing organisation_name, total and a number of staff categories</span></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @return Tibble like raw_staff but with staff categories represented as percentages rather than absolute numbers</span></span>
<span id="cb7-4">convert_percent <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(staff){</span>
<span id="cb7-5">    staff <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb7-6">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.cols =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(organisation_name, total),</span>
<span id="cb7-7">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.fns =</span>  \(x)x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>total)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb7-8">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Doctors"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hchs_doctors"</span>,</span>
<span id="cb7-9">                  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Nurses"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nurses_health_visitors"</span>,</span>
<span id="cb7-10">                  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ambulance staff"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ambulance_staff"</span>,</span>
<span id="cb7-11">                  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Midwives"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"midwives"</span>)</span>
<span id="cb7-12">}</span></code></pre></div>
</div>
</details>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">processed_staff <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb8-2">group_by_ics <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-3">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb8-4">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">staff_percent =</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(raw_data, convert_percent)</span>
<span id="cb8-5">    )</span></code></pre></div>
</div>
<p>Where I think this map-and-nest process really comes into its own is creating plots. Often, I find myself wanting to create a couple of different plots for each grouping, and then optionally save the plots with sensible names. Particularly in the analysis stage, I like having these plots in the same row as the raw data, so I can quickly compare and validate.</p>
<p>I‚Äôve created two functions, <code>plot_barchart()</code> and <code>plot_waffle()</code> which take the data and create charts.</p>
<details>
<summary>
See definition for <code>plot_barchart()</code> &amp; <code>plot_waffle()</code>
</summary>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' Plot barchart</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' Makes a bar chart of staff perentages by organisation</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @param df tibble of staff data in percent format</span></span>
<span id="cb9-4">plot_barchart <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(df) {</span>
<span id="cb9-5">  df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-6">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(organisation_name <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-7">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>total) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-8">    tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(organisation_name), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"job"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"percent"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-9">    ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> percent, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> organisation_name, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> job)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-10">    ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dodge"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb9-11">    ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">percent_format</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-12">    ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-13">    StrategyUnitTheme<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_su</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb9-14">    ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb9-15">    ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title =</span> ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>())</span>
<span id="cb9-16">}</span>
<span id="cb9-17"></span>
<span id="cb9-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' Plot waffle</span></span>
<span id="cb9-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' Makes a waffle chart to visualise staff breakdown at an ICS level</span></span>
<span id="cb9-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @param raw_staff count data of staff</span></span>
<span id="cb9-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @param title Title for the graphic</span></span>
<span id="cb9-22">plot_waffle <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(raw_staff, title) {</span>
<span id="cb9-23">waffle_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb9-24">raw_staff <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-25">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(organisation_name <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-26">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>total, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>organisation_name) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-27">    tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"names"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vals"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-28">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vals =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(vals <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>))</span>
<span id="cb9-29"></span>
<span id="cb9-30">ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(waffle_data, ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> names, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> vals)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-31">  waffle<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_waffle</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_rows =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.33</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-32">  ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_equal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-33">  ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb9-34">  ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title =</span> ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-35">  ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(title)</span>
<span id="cb9-36">}</span></code></pre></div>
</div>
</details>
<p>Again, using <code>mutate()</code> I can create a new column called <code>barchart</code> and I can <code>map()</code> the function <code>plot_barchart()</code>, applying it to each row at a time.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">graphs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb10-2">processed_staff <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-3">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb10-4">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">barchart =</span>  purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(staff_percent, plot_barchart)</span>
<span id="cb10-5">    ) </span></code></pre></div>
</div>
<p>The resulting column <code>barchart</code> is again a list-column, but this time instead of containing a tibble, it holds a ggplot object. A whole ggplot in a single cell. <sup>2</sup></p>
<p>If we want to pass two arguments to our function, we can replace <code>map()</code> with <code>map2()</code>. Here we‚Äôre using <code>map2()</code> to pass the <code>ics_name</code> column to use as a title in our waffle plot. <sup>3</sup></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">graphs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb11-2">processed_staff <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-3">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb11-4">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">waffle =</span>  purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map2</span>(raw_data, ics_name, </span>
<span id="cb11-5">            \(data, title) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_waffle</span>(data, title)</span>
<span id="cb11-6">        )</span>
<span id="cb11-7">    ) </span></code></pre></div>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://the-strategy-unit.github.io/data_science/blogs/posts/2024-08-08_map-and-nest/example_bar_chart.png" class="img-fluid figure-img"></p>
<figcaption>An example bar chart plot</figcaption>
</figure>
</div>
</section>
<section id="putting-it-all-together" class="level2">
<h2 class="anchored" data-anchor-id="putting-it-all-together">Putting it all together</h2>
<p>All of these <code>mutate()</code> steps can actually be called in one step. Here‚Äôs the full workflow again in full after a little refactor. I‚Äôve also used <code>pivot_longer()</code> to move the two plotting columns into a single plot column. This will make it easier for me to generate nice filenames, and save the plots.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb12-2">staff_group <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb12-3">    tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nest</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">raw_data =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>ics_name) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb12-4">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb12-5">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">staff_percent =</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(raw_data, convert_percent),</span>
<span id="cb12-6">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">barchart =</span>  purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(staff_percent, plot_barchart),</span>
<span id="cb12-7">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">waffle =</span>  purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map2</span>(raw_data, ics_name, \(data, title) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_waffle</span>(data, title)) </span>
<span id="cb12-8">    )     <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb12-9">    tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(barchart, waffle), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot_type"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb12-10">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filename =</span> glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{snakecase::to_snake_case(ics_name)}_{plot_type}.png"</span>))</span></code></pre></div>
</div>
<p>The <code>walk()</code> family of functions in {purrr} are used when the function you‚Äôre applying does not return an object, but is being used for it‚Äôs side-effect, for example reading or writing files.</p>
<p>Here we call <code>walk2()</code>, passing in both the filename column and the plots column are arguments to save all the plots.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">walk2</span>(</span>
<span id="cb13-2">  results<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>filename,</span>
<span id="cb13-3">  results<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plot,</span>
<span id="cb13-4">  \(filename, plot) ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plots"</span>, filename), plot, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb13-5">)</span></code></pre></div>
</div>
<p>By keeping everything together in one nested structure, I personally find it much easier to keep track of my analyses. If you‚Äôre doing a more complex or permenant analysis, you might want to consider setting up a more formal data processing pipeline, and following RAP principals.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>In this example, we actually didn‚Äôt need to nest first. We could have performed the <code>mutate()</code> step on the full dataset.‚Ü©Ô∏é</p></li>
<li id="fn2"><p>This totally blew my mind the first time I saw it ü§Ø.‚Ü©Ô∏é</p></li>
<li id="fn3"><p>We‚Äôre mapping the relationship between the two inputs and the <code>plot_waffle()</code> with an anonymous function. This shorthand syntax for anonymous functions came in R v 4.1.0. For compatibility with older versions of R, you‚Äôll need the <code>~</code> operator. For the different ways you can specify functions in {purrr} see the <a href="https://purrr.tidyverse.org/reference/map.html">help file</a>.‚Ü©Ô∏é</p></li>
</ol>
</section></div> ]]></description>
  <category>purrr</category>
  <category>R</category>
  <category>tutorial</category>
  <guid>https://the-strategy-unit.github.io/data_science/blogs/posts/2024-08-08_map-and-nest/</guid>
  <pubDate>Thu, 08 Aug 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Storing data safely</title>
  <dc:creator>[YiWen Hon](mailto:yiwen.hon1@nhs.net)</dc:creator>
  <dc:creator>[Matt Dray](mailto:matt.dray@nhs.net)</dc:creator>
  <link>https://the-strategy-unit.github.io/data_science/blogs/posts/2024-05-22_storing-data-safely/</link>
  <description><![CDATA[ 




<section id="coffee-coding" class="level2">
<h2 class="anchored" data-anchor-id="coffee-coding">Coffee &amp; Coding</h2>
<p>In a recent Coffee &amp; Coding session we chatted about storing data safely for use in Reproducible Analytical Pipelines (RAP), and <a href="https://the-strategy-unit.github.io/data_science/presentations/2024-05-16_store-data-safely/">the slides from the presentation are now available</a>. We discussed the use of <a href="https://docs.posit.co/connect/user/pins/">Posit Connect Pins</a> and <a href="https://azure.microsoft.com/en-gb/products/storage/blobs/">Azure Storage</a>.</p>
<p>In order to avoid duplication, this blog post will not cover the pros and cons of each approach, and will instead focus on documenting the code that was used in our live demonstrations. I would recommend that you look through the slides before using the code in this blogpost and have them alongside, as they provide lots of useful context!</p>
</section>
<section id="posit-connect-pins" class="level2">
<h2 class="anchored" data-anchor-id="posit-connect-pins">Posit Connect Pins</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A brief intro to using {pins} to store, version, share and protect a dataset</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># on Posit Connect. Documentation: https://pins.rstudio.com/</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Setup -------------------------------------------------------------------</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pins"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dplyr"</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if not yet installed</span></span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">suppressPackageStartupMessages</span>({</span>
<span id="cb1-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(pins)</span>
<span id="cb1-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for wrangling and the 'starwars' demo dataset</span></span>
<span id="cb1-13">})</span>
<span id="cb1-14"></span>
<span id="cb1-15">board <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">board_connect</span>() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># will error if you haven't authenticated before</span></span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Error in `check_auth()`: ! auth = `auto` has failed to find a way to authenticate:</span></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ‚Ä¢ `server` and `key` not provided for `auth = 'manual'`</span></span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ‚Ä¢ Can't find CONNECT_SERVER and CONNECT_API_KEY envvars for `auth = 'envvar'`</span></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ‚Ä¢ rsconnect package not installed for `auth = 'rsconnect'`</span></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run `rlang::last_trace()` to see where the error occurred.</span></span>
<span id="cb1-21"></span>
<span id="cb1-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># To authenticate</span></span>
<span id="cb1-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># In RStudio: Tools &gt; Global Options &gt; Publishing &gt; Connect... &gt; Posit Connect</span></span>
<span id="cb1-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># public URL of the Strategy Unit Posit Connect Server: connect.strategyunitwm.nhs.uk</span></span>
<span id="cb1-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Your browser will open to the Posit Connect web page and you're prompted to</span></span>
<span id="cb1-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for your password. Enter it and you'll be authenticated.</span></span>
<span id="cb1-27"></span>
<span id="cb1-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Once authenticated</span></span>
<span id="cb1-29">board <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">board_connect</span>()</span>
<span id="cb1-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Connecting to Posit Connect 2024.03.0 at</span></span>
<span id="cb1-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># &lt;https://connect.strategyunitwm.nhs.uk&gt;</span></span>
<span id="cb1-32"></span>
<span id="cb1-33">board <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pin_list</span>() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># see all the pins on that board</span></span>
<span id="cb1-34"></span>
<span id="cb1-35"></span>
<span id="cb1-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a pin ------------------------------------------------------------</span></span>
<span id="cb1-37"></span>
<span id="cb1-38"></span>
<span id="cb1-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Write a dataset to the board as a pin</span></span>
<span id="cb1-40">board <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pin_write</span>(</span>
<span id="cb1-41">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> starwars,</span>
<span id="cb1-42">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"starwars_demo"</span></span>
<span id="cb1-43">)</span>
<span id="cb1-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Guessing `type = 'rds'`</span></span>
<span id="cb1-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Writing to pin 'matt.dray/starwars_demo'</span></span>
<span id="cb1-46"></span>
<span id="cb1-47">board <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pin_exists</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"starwars_demo"</span>)</span>
<span id="cb1-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ! Use a fully specified name including user name: "matt.dray/starwars_demo",</span></span>
<span id="cb1-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># not "starwars_demo".</span></span>
<span id="cb1-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># [1] TRUE</span></span>
<span id="cb1-51"></span>
<span id="cb1-52">pin_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"matt.dray/starwars_demo"</span></span>
<span id="cb1-53"></span>
<span id="cb1-54">board <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pin_exists</span>(pin_name) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># logical, TRUE/FALSE</span></span>
<span id="cb1-55">board <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pin_meta</span>(pin_name) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># metadata, see also 'metadata' arg in pin_write()</span></span>
<span id="cb1-56">board <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pin_browse</span>(pin_name) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># view the pin in the browser</span></span>
<span id="cb1-57"></span>
<span id="cb1-58"></span>
<span id="cb1-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Permissions -------------------------------------------------------------</span></span>
<span id="cb1-60"></span>
<span id="cb1-61"></span>
<span id="cb1-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># You can let people see and edit a pin. Log into Posit Connect and select the</span></span>
<span id="cb1-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pin under 'Content'. In the 'Settings' panel on the right-hand side, adjust</span></span>
<span id="cb1-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the 'sharing' options in the 'Access' tab.</span></span>
<span id="cb1-65"></span>
<span id="cb1-66"></span>
<span id="cb1-67"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Overwrite and version ---------------------------------------------------</span></span>
<span id="cb1-68"></span>
<span id="cb1-69"></span>
<span id="cb1-70">starwars_droids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> starwars <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb1-71">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(species <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Droid"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># beep boop</span></span>
<span id="cb1-72"></span>
<span id="cb1-73">board <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pin_write</span>(</span>
<span id="cb1-74">  starwars_droids,</span>
<span id="cb1-75">  pin_name,</span>
<span id="cb1-76">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rds"</span></span>
<span id="cb1-77">)</span>
<span id="cb1-78"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Writing to pin 'matt.dray/starwars_demo'</span></span>
<span id="cb1-79"></span>
<span id="cb1-80">board <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pin_versions</span>(pin_name) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># see version history</span></span>
<span id="cb1-81">board <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pin_versions_prune</span>(pin_name, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove history</span></span>
<span id="cb1-82">board <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pin_versions</span>(pin_name)</span>
<span id="cb1-83"></span>
<span id="cb1-84"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># What if you try to overwrite the data but it hasn't changed?</span></span>
<span id="cb1-85">board <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pin_write</span>(</span>
<span id="cb1-86">  starwars_droids,</span>
<span id="cb1-87">  pin_name,</span>
<span id="cb1-88">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rds"</span></span>
<span id="cb1-89">)</span>
<span id="cb1-90"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ! The hash of pin "matt.dray/starwars_demo" has not changed.</span></span>
<span id="cb1-91"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ‚Ä¢ Your pin will not be stored.</span></span>
<span id="cb1-92"></span>
<span id="cb1-93"></span>
<span id="cb1-94"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the pin -------------------------------------------------------------</span></span>
<span id="cb1-95"></span>
<span id="cb1-96"></span>
<span id="cb1-97"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># You can read a pin to your local machine, or access it from a Quarto file</span></span>
<span id="cb1-98"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># or Shiny app hosted on Connect, for example. If the output and the pin are</span></span>
<span id="cb1-99"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># both on Connect, no authentication is required; the board is defaulted to</span></span>
<span id="cb1-100"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the Posit Connect instance where they're both hosted.</span></span>
<span id="cb1-101"></span>
<span id="cb1-102">board <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb1-103">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pin_read</span>(pin_name) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># like you would use e.g. read_csv</span></span>
<span id="cb1-104">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> _, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(mass, height)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># wow!</span></span>
<span id="cb1-105"></span>
<span id="cb1-106"></span>
<span id="cb1-107"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Delete pin --------------------------------------------------------------</span></span>
<span id="cb1-108"></span>
<span id="cb1-109"></span>
<span id="cb1-110">board <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pin_exists</span>(pin_name) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># logical, good function for error handling</span></span>
<span id="cb1-111">board <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pin_delete</span>(pin_name)</span>
<span id="cb1-112">board <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pin_exists</span>(pin_name)</span></code></pre></div>
</div>
</section>
<section id="azure-storage-in-r" class="level2">
<h2 class="anchored" data-anchor-id="azure-storage-in-r">Azure Storage in R</h2>
<p>You will need an .Renviron file with the four environment variables listed below for the code to work. This .Renviron file should be ignored by git. You can share the contents of .Renviron files with other team members via Teams, email, or Sharepoint.</p>
<p>Below is a sample .Renviron file</p>
<pre><code>AZ_STORAGE_EP=https://STORAGEACCOUNT.blob.core.windows.net/
AZ_STORAGE_CONTAINER=container-name
AZ_TENANT_ID=long-sequence-of-numbers-and-letters
AZ_APP_ID=another-long-sequence-of-numbers-and-letters</code></pre>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AzureAuth"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AzureStor"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"arrow"</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if not yet installed</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load all environment variables</span></span>
<span id="cb3-4">ep_uri <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AZ_STORAGE_EP"</span>)</span>
<span id="cb3-5">app_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AZ_APP_ID"</span>)</span>
<span id="cb3-6">container_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AZ_STORAGE_CONTAINER"</span>)</span>
<span id="cb3-7">tenant <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AZ_TENANT_ID"</span>)</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Authenticate</span></span>
<span id="cb3-10">token <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> AzureAuth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_azure_token</span>(</span>
<span id="cb3-11">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://storage.azure.com"</span>,</span>
<span id="cb3-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tenant =</span> tenant,</span>
<span id="cb3-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">app =</span> app_id,</span>
<span id="cb3-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">auth_type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"device_code"</span>,</span>
<span id="cb3-15">)</span>
<span id="cb3-16"></span>
<span id="cb3-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If you have not authenticated before, you will be taken to an external page to</span></span>
<span id="cb3-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># authenticate!Use your mlcsu.nhs.uk account.</span></span>
<span id="cb3-19"></span>
<span id="cb3-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Connect to container</span></span>
<span id="cb3-21">endpoint <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> AzureStor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">blob_endpoint</span>(ep_uri, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">token =</span> token)</span>
<span id="cb3-22">container <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> AzureStor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">storage_container</span>(endpoint, container_name)</span>
<span id="cb3-23"></span>
<span id="cb3-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># List files in container</span></span>
<span id="cb3-25">blob_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> AzureStor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list_blobs</span>(container)</span>
<span id="cb3-26"></span>
<span id="cb3-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If you get a 403 error when trying to interact with the container, you may</span></span>
<span id="cb3-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># have to clear your Azure token and re-authenticate using a different browser.</span></span>
<span id="cb3-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use AzureAuth::clean_token_directory() to clear your token, then repeat the</span></span>
<span id="cb3-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># AzureAuth::get_azure_token() step above.</span></span>
<span id="cb3-31"></span>
<span id="cb3-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Upload specific file to container</span></span>
<span id="cb3-33">AzureStor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">storage_upload</span>(container, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/ronald.jpeg"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"newdir/ronald.jpeg"</span>)</span>
<span id="cb3-34"></span>
<span id="cb3-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Upload contents of a local directory to container</span></span>
<span id="cb3-36">AzureStor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">storage_multiupload</span>(container, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/*"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"newdir"</span>)</span>
<span id="cb3-37"></span>
<span id="cb3-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check files have uploaded</span></span>
<span id="cb3-39">blob_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> AzureStor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list_blobs</span>(container)</span>
<span id="cb3-40"></span>
<span id="cb3-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load file directly from Azure container</span></span>
<span id="cb3-42">df_from_azure <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> AzureStor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">storage_read_csv</span>(</span>
<span id="cb3-43">  container,</span>
<span id="cb3-44">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"newdir/cats.csv"</span>,</span>
<span id="cb3-45">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show_col_types =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb3-46">)</span>
<span id="cb3-47"></span>
<span id="cb3-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load file directly from Azure container (by temporarily downloading file</span></span>
<span id="cb3-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># and storing it in memory)</span></span>
<span id="cb3-50">parquet_in_memory <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> AzureStor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">storage_download</span>(</span>
<span id="cb3-51">  container,</span>
<span id="cb3-52">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">src =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"newdir/cats.parquet"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dest =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb3-53">)</span>
<span id="cb3-54">parq_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> arrow<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_parquet</span>(parquet_in_memory)</span>
<span id="cb3-55"></span>
<span id="cb3-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Delete from Azure container (!!!)</span></span>
<span id="cb3-57"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (blobfile <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> blob_list<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>name) {</span>
<span id="cb3-58">  AzureStor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">delete_storage_file</span>(container, blobfile)</span>
<span id="cb3-59">}</span></code></pre></div>
</div>
</section>
<section id="azure-storage-in-python" class="level2">
<h2 class="anchored" data-anchor-id="azure-storage-in-python">Azure Storage in Python</h2>
<p>This will use the same environment variables as the R version, just stored in a .env file instead.</p>
<p>We didn‚Äôt cover this in the presentation, so it‚Äôs not in the slides, but the code should be self-explanatory.</p>
<div class="quarto-embed-nb-cell">
<div id="cell-0" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> io</span>
<span id="cb4-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb4-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> dotenv <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dotenv</span>
<span id="cb4-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> azure.identity <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DefaultAzureCredential</span>
<span id="cb4-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> azure.storage.blob <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ContainerClient</span></code></pre></div>
</div>
<div id="cell-1" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load all environment variables</span></span>
<span id="cb5-2">load_dotenv()</span>
<span id="cb5-3">account_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.getenv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'AZ_STORAGE_EP'</span>)</span>
<span id="cb5-4">container_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.getenv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'AZ_STORAGE_CONTAINER'</span>)</span></code></pre></div>
</div>
<div id="cell-2" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Authenticate</span></span>
<span id="cb6-2">default_credential <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DefaultAzureCredential()</span></code></pre></div>
</div>
<p>For the first time, you might need to authenticate via the Azure CLI</p>
<p>Download it from https://learn.microsoft.com/en-us/cli/azure/install-azure-cli-windows?tabs=azure-cli</p>
<p>Install then run <code>az login</code> in your terminal. Once you have logged in with your browser try the <code>DefaultAzureCredential()</code> again!</p>
<div id="cell-4" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Connect to container</span></span>
<span id="cb7-2">container_client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ContainerClient(account_url, container_name, default_credential)</span></code></pre></div>
</div>
<div id="cell-5" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># List files in container - should be empty</span></span>
<span id="cb8-2">blob_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> container_client.list_blob_names()</span>
<span id="cb8-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> blob <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> blob_list:</span>
<span id="cb8-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> blob.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'newdir'</span>):</span>
<span id="cb8-5">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(blob)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>newdir/cats.parquet
newdir/ronald.jpeg</code></pre>
</div>
</div>
<div id="cell-6" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Upload file to container</span></span>
<span id="cb10-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data/cats.csv'</span>, mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rb"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> data:</span>
<span id="cb10-3">    blob_client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> container_client.upload_blob(name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'newdir/cats.csv'</span>, </span>
<span id="cb10-4">                                               data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>data, </span>
<span id="cb10-5">                                               overwrite<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
</div>
<div id="cell-7" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # Check files have uploaded - List files in container again</span></span>
<span id="cb11-2">blob_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> container_client.list_blobs()</span>
<span id="cb11-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> blob <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> blob_list:</span>
<span id="cb11-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> blob[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'name'</span>].startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'newdir'</span>):</span>
<span id="cb11-5">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(blob[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'name'</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>newdir/cats.csv
newdir/cats.parquet
newdir/ronald.jpeg</code></pre>
</div>
</div>
<div id="cell-8" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download file from Azure container to temporary filepath</span></span>
<span id="cb13-2"></span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Connect to blob</span></span>
<span id="cb13-4">blob_client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> container_client.get_blob_client(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'newdir/cats.csv'</span>)</span>
<span id="cb13-5"></span>
<span id="cb13-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Write to local file from blob</span></span>
<span id="cb13-7">temp_filepath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'temp_data'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cats.csv'</span>)</span>
<span id="cb13-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>temp_filepath, mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wb"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sample_blob:</span>
<span id="cb13-9">    download_stream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blob_client.download_blob()</span>
<span id="cb13-10">    sample_blob.write(download_stream.readall())</span>
<span id="cb13-11">cat_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(temp_filepath)</span>
<span id="cb13-12">cat_data.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Name</th>
<th data-quarto-table-cell-role="th">Physical_characteristics</th>
<th data-quarto-table-cell-role="th">Behaviour</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>Ronald</td>
<td>White and ginger</td>
<td>Lazy and greedy but undoubtedly cutest and best</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>Kaspie</td>
<td>Small calico</td>
<td>Sweet and very shy but adventurous</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>Hennimore</td>
<td>Pale orange</td>
<td>Unhinged and always in a state of panic</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>Thug cat</td>
<td>Black and white - very large</td>
<td>Local bully</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>Son of Stripey</td>
<td>Grey tabby</td>
<td>Very vocal</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="cell-9" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load directly from Azure - no local copy</span></span>
<span id="cb14-2"></span>
<span id="cb14-3">download_stream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blob_client.download_blob()</span>
<span id="cb14-4">stream_object <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> io.BytesIO(download_stream.readall())</span>
<span id="cb14-5">cat_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(stream_object)</span>
<span id="cb14-6">cat_data</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Name</th>
<th data-quarto-table-cell-role="th">Physical_characteristics</th>
<th data-quarto-table-cell-role="th">Behaviour</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>Ronald</td>
<td>White and ginger</td>
<td>Lazy and greedy but undoubtedly cutest and best</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>Kaspie</td>
<td>Small calico</td>
<td>Sweet and very shy but adventurous</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>Hennimore</td>
<td>Pale orange</td>
<td>Unhinged and always in a state of panic</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>Thug cat</td>
<td>Black and white - very large</td>
<td>Local bully</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>Son of Stripey</td>
<td>Grey tabby</td>
<td>Very vocal</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="cell-10" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !!!!!!!!! Delete from Azure container !!!!!!!!!</span></span>
<span id="cb15-2">blob_client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> container_client.get_blob_client(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'newdir/cats.csv'</span>)</span>
<span id="cb15-3">blob_client.delete_blob()</span></code></pre></div>
</div>
<div id="cell-11" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">blob_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> container_client.list_blobs()</span>
<span id="cb16-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> blob <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> blob_list:</span>
<span id="cb16-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> blob[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'name'</span>].startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'newdir'</span>):</span>
<span id="cb16-4">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(blob[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'name'</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>newdir/cats.parquet
newdir/ronald.jpeg</code></pre>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>learning</category>
  <category>R</category>
  <category>Python</category>
  <guid>https://the-strategy-unit.github.io/data_science/blogs/posts/2024-05-22_storing-data-safely/</guid>
  <pubDate>Wed, 22 May 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>One year of coffee &amp; coding</title>
  <dc:creator>Rhian Davies</dc:creator>
  <link>https://the-strategy-unit.github.io/data_science/blogs/posts/2024-05-13_one-year-coffee-code/</link>
  <description><![CDATA[ 




<p>The data science team have been running coffee &amp; coding sessions for just over a year now. When I joined that Strategy Unit, I was really pleased to see these sessions running as I think making time to discuss and share technical knowledge is highly valuable, especially as an organisation grows.</p>
<p>Coffee and coding sessions run every two weeks and usually take the form of a short presentation, followed by a discussion. Although we have had a variety of different sessions including live coding demos and show and tell for projects.</p>
<p>We figured it would be a good idea to do a quick survey of attendees to make sure that the sessions were beneficial and see if there were any suggestions for future sessions. We had 11 responses, all of which were really positive, with 90% agreeing that the sessions are interesting, and over 80% saying that they learn new things. Respondents said that the sessions were well varied across the technical spectrum and that they ‚Äúalmost always learn something useful‚Äù.</p>
<p>The two main themes of the results were that sessions were <em>inclusive</em> and <em>sparked collaboration.</em> ‚ú®</p>
<blockquote class="blockquote">
<p>I like that everyone can contribute</p>
</blockquote>
<blockquote class="blockquote">
<p>It‚Äôs great seeing what else people are doing</p>
</blockquote>
<blockquote class="blockquote">
<p>I get more ideas for future projects</p>
</blockquote>
<p>Some of the main suggestions included more content for newer programmers and encouraging the wider analytical team to share real project examples.</p>
<p>So with that, why not consider presenting? The sessions are informal and everyone is welcome to contribute. If you‚Äôve got something to share, please let a member of the data science team know.</p>
<p>As a reminder, materials for our previous sessions are available under <a href="https://the-strategy-unit.github.io/data_science/presentations/">Presentations</a>.</p>



 ]]></description>
  <category>learning</category>
  <guid>https://the-strategy-unit.github.io/data_science/blogs/posts/2024-05-13_one-year-coffee-code/</guid>
  <pubDate>Mon, 13 May 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>RStudio Tips and Tricks</title>
  <dc:creator>Matt Dray</dc:creator>
  <link>https://the-strategy-unit.github.io/data_science/blogs/posts/2024-03-21_rstudio-tips/</link>
  <description><![CDATA[ 




<section id="coffee-coding" class="level2">
<h2 class="anchored" data-anchor-id="coffee-coding">Coffee &amp; Coding</h2>
<p>In a recent Coffee &amp; Coding session we chatted about tips and tricks for <a href="https://posit.co/products/open-source/rstudio/">RStudio</a>, the popular and free Integrated Development Environment (IDE) that many Strategy Unit analysts use to write R code.</p>
<p>RStudio has lots of neat features but many are tucked away in submenus. This session was a chance for the community to uncover and discuss some hidden gems to make our work easier and faster.</p>
</section>
<section id="official-guidance" class="level2">
<h2 class="anchored" data-anchor-id="official-guidance">Official guidance</h2>
<p><a href="https://posit.co/">Posit</a> is the company who build and maintain RStudio. They host a number of cheatsheets on their website, <a href="https://rstudio.github.io/cheatsheets/html/rstudio-ide.html">including one for RStudio</a>. They also have a more <a href="https://docs.posit.co/ide/user/">in-depth user guide</a>.</p>
</section>
<section id="command-palette" class="level2">
<h2 class="anchored" data-anchor-id="command-palette">Command palette</h2>
<p>RStudio has a powerful built-in <a href="https://docs.posit.co/ide/user/ide/guide/ui/command-palette.html">Command Palette</a>, which is a special search box that gives instant access to features and settings without needing to find them in the menus. Many of the tips and tricks we discussed can be found by searching in the Palette. Open it with the keyboard shortcut <kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd>P</kbd>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://the-strategy-unit.github.io/data_science/blogs/posts/2024-03-21_rstudio-tips/command-palette.png" class="img-fluid figure-img" style="width:100.0%" data-fig.alt="The RStudio command palette. It's a search box with some suggested actiosn underneath, like 'create a new R script' and 'insert pipe operator'. Some of these options show what grouping they belong to, like 'help'. Others display keyboard shortcuts."></p>
<figcaption>Opening the Command Palette.</figcaption>
</figure>
</div>
<p>For example, let‚Äôs say you forgot how to restart R. If you open the Command Palette and start typing ‚Äòrestart‚Äô, you‚Äôll see the option ‚ÄòRestart R Session‚Äô. Clicking it will do exactly that. Handily, the Palette also displays the keyboard shortcut (<kbd>Control</kbd> + <kbd>Shift</kbd> + <kbd>F10</kbd> on Windows) as a reminder.</p>
<p>As for settings, a search for ‚Äòrainbow‚Äô in the Command Palette will find ‚ÄòUse rainbow parentheses‚Äô, an option to help prevent bracket-mismatch errors by colouring pairs of parentheses. What‚Äôs nice is that the checkbox to toggle the feature appears right there in the palette so you can change it immediately.</p>
<p>I refer to menu paths and keyboard shortcuts in the rest of this post, but bear in mind that you can use the Command Palette instead.</p>
</section>
<section id="options" class="level2">
<h2 class="anchored" data-anchor-id="options">Options</h2>
<p>In general, most settings can be found under Tools &gt; Global Options‚Ä¶ and many of these are discussed in the rest of this post.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://the-strategy-unit.github.io/data_science/blogs/posts/2024-03-21_rstudio-tips/options.png" class="img-fluid figure-img" style="width:100.0%" data-fig.alt="RStudio options window opened to the 'basic' tab of the 'general'section. There are options to adjust things like yoru workspace and history settings. Other sections include settings for the console, appearance and accessibility."></p>
<figcaption>Adjusting workspace and history settings.</figcaption>
</figure>
</div>
<p>But there‚Äôs a few settings in particular that we recommend you change to help maximise reproducibility and reduce the chance of confusion. Under General &gt; Basic, uncheck ‚ÄòRestore .Rdata into workspace at startup‚Äô and select ‚ÄòNever‚Äô from the dropdown options next to ‚ÄòSave workspace to .Rdata on exit‚Äô. These options mean you start with the ‚Äòblank slate‚Äô of an empty environment when you open a project, allowing you to rebuild objects from scratch<sup>1</sup>.</p>
</section>
<section id="keyboard-shortcuts" class="level2">
<h2 class="anchored" data-anchor-id="keyboard-shortcuts">Keyboard shortcuts</h2>
<p>You can speed up day-to-day coding with keyboard shortcuts instead of clicking buttons in the interface.</p>
<p>You can see some available shortcuts in RStudio if you navigate to Help &gt; Keyboard Shortcuts Help, or use the shortcut <kbd>Alt</kbd> + <kbd>Shift</kbd> + <kbd>K</kbd> (how meta). You can go to Help &gt; Modify Keyboard Shortcuts‚Ä¶ to search all shortcuts and change them to what you prefer<sup>2</sup>.</p>
<p>We discussed a number of handy shortcuts that we use frequently<sup>3</sup>. You can:</p>
<ul>
<li>re-indent lines to the appropriate depth with <kbd>Control</kbd> + <kbd>I</kbd></li>
<li>reformat code with <kbd>Control</kbd> + <kbd>Shift</kbd> + <kbd>A</kbd></li>
<li>turn one or more lines into a comment with <kbd>Control</kbd> + <kbd>Shift</kbd> + <kbd>C</kbd></li>
<li>insert the pipe operator (<code>%&gt;%</code> or <code>|&gt;</code><sup>4</sup>) with <kbd>Control</kbd> + <kbd>Shift</kbd> + <kbd>M</kbd><sup>5</sup></li>
<li>insert the assignment arrow (<code>&lt;-</code>) with <kbd>Alt</kbd> + <kbd>-</kbd> (hyphen)</li>
<li>highlight a function in the script or console and press <kbd>F1</kbd> to open the function documentation in the ‚ÄòHelp‚Äô pane</li>
<li>use ‚ÄòFind in Files‚Äô to search for a particular variable, function or string across all the files in your project, with <kbd>Control</kbd> + <kbd>Shift</kbd> + <kbd>F</kbd></li>
</ul>
</section>
<section id="themes" class="level2">
<h2 class="anchored" data-anchor-id="themes">Themes</h2>
<p>You can change a number of settings to alter RStudio‚Äôs theme, colours and fonts to whatever you desire.</p>
<p>You can <a href="https://docs.posit.co/ide/user/ide/guide/ui/appearance.html">change the default theme</a> in Tools &gt; Global Options‚Ä¶ &gt; Appearance &gt; Editor theme and select one from the pre-installed list. You can upload new themes by clicking the ‚ÄòAdd‚Äô button and selecting a theme from your computer. They typically have the file extension .rsthemes and can be downloaded from the web, or you can create or tweak one yourself. <a href="https://www.garrickadenbuie.com/project/rsthemes/">The {rsthemes} package</a> has a number of options and also allows you to switch between themes and automatically switch between light and dark themes depending on the time of day.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://the-strategy-unit.github.io/data_science/blogs/posts/2024-03-21_rstudio-tips/appearance.png" class="img-fluid figure-img" style="width:100.0%" data-fig.alt="RStudio options window opened to the 'appearance' section. The font has been changed to an installed font called 'Fira Code'. The theme has been changed to an installed theme called 'viridis'."></p>
<figcaption>Customising the appearance and font.</figcaption>
</figure>
</div>
<p>In the same ‚ÄòAppearance‚Äô submenu as the theme settings, you can find an option to change fonts. Monospace fonts, ones where each character takes up the same width, will appear here automatically if you‚Äôve installed them on your computer. One popular font for coding is <a href="https://github.com/tonsky/FiraCode">Fira Code</a>, which has the special property of converting certain sets of characters into ‚Äòligatures‚Äô, which some people find easier to read. For example, the base pipe will appear as a rightward-pointing arrow rather than its constituent vertical-pipe and greater-than symbol (<code>|&gt;</code>).</p>
</section>
<section id="panes" class="level2">
<h2 class="anchored" data-anchor-id="panes">Panes</h2>
<section id="layout" class="level3">
<h3 class="anchored" data-anchor-id="layout">Layout</h3>
<p>The structural layout of RStudio‚Äôs panes can be adjusted. One simple thing you can do is minimise and maximise each pane by clicking the window icons in their upper-right corners. This is useful when you want more screen real-estate for a particular pane.</p>
<p>You can move pane loations too. Click the ‚ÄòWorkspace Panes‚Äô button (a square with four more inside it) at the top of the IDE to see a number of settings. For example, you can select ‚ÄòConsole on the right‚Äô to move the R console to the upper-right pane, which you may prefer for maximimsing the vertical space in which code is shown. You could also click Pane Layout‚Ä¶ in this menu to be taken to Tools &gt; Global Options‚Ä¶ &gt; Pane layout, where you can click ‚ÄòAdd Column‚Äô to insert new script panes that allow you to inspect and write multiple files side-by-side.</p>
</section>
<section id="script-navigation" class="level3">
<h3 class="anchored" data-anchor-id="script-navigation">Script navigation</h3>
<p>The script pane in particular has a nice feature for navigating through sections of your script or Quarto/R Markdown files. Click the ‚ÄòShow Document Outline‚Äô button or use the keyboard shortcut <kbd>Control</kbd> + <kbd>Shift</kbd> + <kbd>O</kbd> to slide open a tray that provides a nice indented list of all the sections and function defintions in your file.</p>
<p>Section headers are auto-detected in a Quarto or R Markdown document wherever the Markdown header markup has been used: one hashmark (<code>#</code>) for a level 1 header, two for level 2, and so on. To add section headers to an R Script, add at least four hyphens after a commented line that starts with <code>#</code>. Use two or more hashes at the start of the comment to increase the nestedness of that section.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Header ------------------------------------------------------------------</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Section ----</span></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Subsection ----</span></span></code></pre></div>
</div>
<p>Note that <kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd>R</kbd> will open a dialog box for you to input the name of a section header, which will be inserted and automatically padded to 75 characters to provide a strong visual cue between sections.</p>
<p>As well as the document outline, there‚Äôs also a reminder in the lower-left of the script pane that gives the name of the section that your cursor is currently in. A symbol is also shown: a hashmark means it‚Äôs a headed section and an ‚Äòf‚Äô means it‚Äôs a function definition. You can click this to jump to other sections.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://the-strategy-unit.github.io/data_science/blogs/posts/2024-03-21_rstudio-tips/rstudio-sections.png" class="img-fluid figure-img" style="width:100.0%" data-fig.alt="RStudio script pane. There are three headers denoterd with one, two and three hash marks, named 'header', 'section' and 'subsection'. There is a demo functio nnamed 'add_one' in the subsection. The outline panel is open on the right and shows these items nested under each other. The cursor is on the subsection header and this is noted under the script."></p>
<figcaption>Navigating with headers in the R script pane.</figcaption>
</figure>
</div>
</section>
<section id="background-jobs" class="level3">
<h3 class="anchored" data-anchor-id="background-jobs">Background jobs</h3>
<p>Perhaps an under-used pane is ‚Äò<a href="https://docs.posit.co/ide/user/ide/guide/tools/jobs.html">Background jobs</a>‚Äô. This is where you can run a separate R process that keeps your R console free. Go to Tools &gt; Background Jobs &gt; Start Background Job‚Ä¶ to expose this tab if it isn‚Äôt already listed alongside the R console.</p>
<p>Why might you want to do this? As I write this post, there‚Äôs a background process to detect changes to the Quarto document that I‚Äôm writing and then update a preview I have running in the browser. You can do something similar for Shiny apps. You can continue to develop your app and test things in the console and the app preview will update on save. You won‚Äôt need to keep hitting the ‚ÄòRender‚Äô or ‚ÄòRun app‚Äô button every time you make a change.</p>
</section>
</section>
<section id="magic-wand" class="level2">
<h2 class="anchored" data-anchor-id="magic-wand">Magic wand</h2>
<p>There‚Äôs a miscellany of useful tools available when you click the ‚Äòmagic wand‚Äô button in the script pane.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://the-strategy-unit.github.io/data_science/blogs/posts/2024-03-21_rstudio-tips/wand.png" class="img-fluid figure-img" style="width:100.0%" data-fig.alt="The magic wand submenu, which contains options to do things like 'rename in scope', 'reflow comment' and 'reindent lines'."></p>
<figcaption>Abracadabra! Casting open the ‚Äòmagic wand‚Äô menu.</figcaption>
</figure>
</div>
<p>This includes:</p>
<ul>
<li>‚ÄòRename in Scope‚Äô, which is like find-and-replace but you only change instances with the same ‚Äòscope‚Äô, so you could select the variable <code>x</code>, go to Rename in Scope and then you can edit all instances of the variable in the document and change them at the same time (e.g.&nbsp;to rename them)</li>
<li>‚ÄòReflow Comment‚Äô, which you can click after higlighting a comments block to have the comments automatically line-break at the maximum width</li>
<li>‚ÄòInsert Roxygen Skeleton‚Äô, which you can click when your cursor is inside the body of a function you‚Äôve written and a {roxygen2} documentation template will be added above your function with the <code>@params</code> argument names pre-filled</li>
</ul>
<p>Along with ‚ÄòComment/Uncomment Lines‚Äô, ‚ÄòReindent Lines‚Äô and ‚ÄòReformat Lines‚Äô, mentioned above in the keyboard shortcuts section.</p>
</section>
<section id="wrapping-up" class="level2">
<h2 class="anchored" data-anchor-id="wrapping-up">Wrapping up</h2>
<p>Time was limited in our discussion. There are so many more tips and tricks that we didn‚Äôt get to. Let us know what we missed, or what your favourite shortcuts and settings are.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>For the same reason it‚Äôs a good idea to restart R on a frequent basis. You may assume that an object <code>x</code> in your environment was made in a certain way and contains certain information, but does it? What if you overwrote it at some point and forgot? Best to wipe the slate clean and rebuild it from scratch. Jenny Bryan has <a href="https://www.tidyverse.org/blog/2017/12/workflow-vs-script/">written an explainer</a>.‚Ü©Ô∏é</p></li>
<li id="fn2"><p>You can ‚Äòsnap focus‚Äô to the script and console panes with the pre-existing shortcuts <kbd>Control</kbd> + <kbd>1</kbd> and <kbd>Control</kbd> + <kbd>2</kbd>. My next most-used pane is the terminal, so I‚Äôve re-mapped the shortcut to <kbd>Control</kbd> + <kbd>3</kbd>.‚Ü©Ô∏é</p></li>
<li id="fn3"><p>The classic shortcuts of select-all (<kbd>Control</kbd> + <kbd>A</kbd>), cut (<kbd>Control</kbd> + <kbd>X</kbd>), copy <kbd>Control</kbd> + <kbd>C</kbd>, paste (<kbd>Control</kbd> + <kbd>V</kbd>), undo (<kbd>Control</kbd> + <kbd>Z</kbd>) and redo (<kbd>Control</kbd> + <kbd>Shift</kbd> + <kbd>Z</kbd>) are all available when editing.‚Ü©Ô∏é</p></li>
<li id="fn4"><p>Note that you can set the default pipe to the base-R version (<code>|&gt;</code>) by checking the box at Tools &gt; Global Options‚Ä¶ &gt; Code &gt; Use native pipe operator‚Ü©Ô∏é</p></li>
<li id="fn5"><p>Probably ‚ÄòM‚Äô for {magrittr}, the name of the package that contains the <code>%&gt;%</code> incarnation of the operator.‚Ü©Ô∏é</p></li>
</ol>
</section></div> ]]></description>
  <category>learning</category>
  <category>R</category>
  <guid>https://the-strategy-unit.github.io/data_science/blogs/posts/2024-03-21_rstudio-tips/</guid>
  <pubDate>Thu, 21 Mar 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Visualising participant recruitment in R using Sankey plots</title>
  <dc:creator>Craig Parylo</dc:creator>
  <link>https://the-strategy-unit.github.io/data_science/blogs/posts/2024-02-28_sankey_plot/</link>
  <description><![CDATA[ 




<section id="introduction" class="level1 page-columns page-full">
<h1>Introduction</h1>
<p>Sankey diagrams are great tools to visualise flows through a system. They show connections between the steps of a process where the width of the arrows is proportional to the flow.</p>
<p>I‚Äôm working on an evaluation of a risk screening process for people aged between 55-74 years and a history of smoking. In this Targeted Lung Health Check (TLHC) programme<sup>1</sup> eligible people are invited to attend a free lung check where those assessed at high risk of lung cancer are then offered low-dose CT screening scans.</p>
<div class="no-row-height column-margin column-container"><div id="fn1"><p><sup>1</sup>&nbsp;Please visit the <a href="https://www.england.nhs.uk/contact-us/privacy-notice/how-we-use-your-information/our-services/evaluation-of-the-targeted-lung-health-check-programme/">NHS England</a> site for for more background.</p></div></div><p>We used Sankey diagrams to visualise how people have engaged with the programme, from recruitment, attendance at appointments, their outcome from risk assessment, attendance at CT scans and will eventually be extended to cover the impact of the screening on early detection of those diagnosed with lung cancer.</p>
<p>This blog post is about the technical process of preparing record-level data for visualisation in a Sankey plot using <code>R</code> and customising it to enhance look and feel. Here is how the finished product will look:</p>
<div class="cell">
<div class="cell-output-display">
<div class="plotly html-widget html-fill-item" id="htmlwidget-0ee2b82eaaa830a12ecd" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-0ee2b82eaaa830a12ecd">{"x":{"visdat":{"74a468a063c8":["function () ","plotlyVisDat"]},"cur_data":"74a468a063c8","attrs":{"74a468a063c8":{"orientation":"h","arrangement":"snap","node":{"label":["Eligible population","Invitation 1 No response","Invitation 1 Declined","Invitation 1 Accepted","Invitation 2 No response","Invitation 2 Accepted","Invitation 2 Declined","Invitation 3 Accepted","Invitation 3 Declined","Invitation 3 No response","Declined","Accepted","No response"],"color":["#7f8fa6","#7f8fa6","#c23616","#44bd32","#7f8fa6","#44bd32","#c23616","#44bd32","#c23616","#7f8fa6","#c23616","#44bd32","#7f8fa6"],"x":[0.001,0.22575000000000001,0.22575000000000001,0.22575000000000001,0.45050000000000001,0.45050000000000001,0.45050000000000001,0.67525000000000002,0.67525000000000002,0.67525000000000002,0.90000000000000002,0.90000000000000002,0.90000000000000002],"y":[0.53326666666666667,0.53326666666666667,0.999,0.001,0.53326666666666667,0.13406666666666667,0.90585333333333329,0.22721333333333335,0.82601333333333338,0.63972000000000007,0.93246666666666667,0.001,0.53326666666666667],"customdata":[null,"77.0%","15.0%","8.0%","46.0%","12.0%","8.0%","9.0%","10.0%","14.0%","33.0%","29.0%","38.0%"],"hovertemplate":"%{label}<br /><b>%{value}<\/b> participants<br /><b>%{customdata}<\/b> of eligible population"},"link":{"source":[0,0,0,1,1,1,2,3,1,4,4,4,5,6,4,7,8,9],"target":[2,1,3,4,5,6,10,11,12,7,8,9,11,10,12,11,10,12],"value":[15,77,8,46,12,8,15,8,11,9,10,14,12,8,13,9,10,14],"label":["15","77","8","46","12","8","15","8","11","9","10","14","12","8","13","9","10","14"],"color":["#C236164C","#7F8FA64C","#44BD324C","#7F8FA64C","#44BD324C","#C236164C","#C236164C","#44BD324C","#7F8FA64C","#44BD324C","#C236164C","#7F8FA64C","#44BD324C","#C236164C","#7F8FA64C","#44BD324C","#C236164C","#7F8FA64C"],"customdata":["15.0%","77.0%","8.0%","46.0%","12.0%","8.0%","15.0%","8.0%","11.0%","9.0%","10.0%","14.0%","12.0%","8.0%","13.0%","9.0%","10.0%","14.0%"],"hovertemplate":"%{source.label} ‚Üí %{target.label}<br /><b>%{value}<\/b> participants<br /><b>%{customdata}<\/b> of eligible population"},"alpha_stroke":1,"sizes":[10,100],"spans":[1,20],"type":"sankey"}},"layout":{"margin":{"b":40,"l":60,"t":25,"r":10},"font":{"family":"Arial, Helvetica, sans-serif","size":12},"paper_bgcolor":"rgba(0,0,0,0)","hovermode":"closest","showlegend":false},"source":"A","config":{"modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false,"responsive":true},"data":[{"orientation":"h","arrangement":"snap","node":{"label":["Eligible population","Invitation 1 No response","Invitation 1 Declined","Invitation 1 Accepted","Invitation 2 No response","Invitation 2 Accepted","Invitation 2 Declined","Invitation 3 Accepted","Invitation 3 Declined","Invitation 3 No response","Declined","Accepted","No response"],"color":["#7f8fa6","#7f8fa6","#c23616","#44bd32","#7f8fa6","#44bd32","#c23616","#44bd32","#c23616","#7f8fa6","#c23616","#44bd32","#7f8fa6"],"x":[0.001,0.22575000000000001,0.22575000000000001,0.22575000000000001,0.45050000000000001,0.45050000000000001,0.45050000000000001,0.67525000000000002,0.67525000000000002,0.67525000000000002,0.90000000000000002,0.90000000000000002,0.90000000000000002],"y":[0.53326666666666667,0.53326666666666667,0.999,0.001,0.53326666666666667,0.13406666666666667,0.90585333333333329,0.22721333333333335,0.82601333333333338,0.63972000000000007,0.93246666666666667,0.001,0.53326666666666667],"customdata":[null,"77.0%","15.0%","8.0%","46.0%","12.0%","8.0%","9.0%","10.0%","14.0%","33.0%","29.0%","38.0%"],"hovertemplate":"%{label}<br /><b>%{value}<\/b> participants<br /><b>%{customdata}<\/b> of eligible population"},"link":{"source":[0,0,0,1,1,1,2,3,1,4,4,4,5,6,4,7,8,9],"target":[2,1,3,4,5,6,10,11,12,7,8,9,11,10,12,11,10,12],"value":[15,77,8,46,12,8,15,8,11,9,10,14,12,8,13,9,10,14],"label":["15","77","8","46","12","8","15","8","11","9","10","14","12","8","13","9","10","14"],"color":["#C236164C","#7F8FA64C","#44BD324C","#7F8FA64C","#44BD324C","#C236164C","#C236164C","#44BD324C","#7F8FA64C","#44BD324C","#C236164C","#7F8FA64C","#44BD324C","#C236164C","#7F8FA64C","#44BD324C","#C236164C","#7F8FA64C"],"customdata":["15.0%","77.0%","8.0%","46.0%","12.0%","8.0%","15.0%","8.0%","11.0%","9.0%","10.0%","14.0%","12.0%","8.0%","13.0%","9.0%","10.0%","14.0%"],"hovertemplate":"%{source.label} ‚Üí %{target.label}<br /><b>%{value}<\/b> participants<br /><b>%{customdata}<\/b> of eligible population"},"type":"sankey","frame":null}],"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.20000000000000001,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
</section>
<section id="data-wrangling" class="level1 page-columns page-full">
<h1>Data wrangling</h1>
<p>First we‚Äôll attach some packages. I‚Äôll be using <a href="https://plotly.com/r/sankey-diagram/">plotly</a> for the visualisation of the Sankey chart, <a href="https://tidygraph.data-imaginist.com/">tidygraph</a> for graph manipulation and <a href="https://scales.r-lib.org/">scales</a> to handle colour transformation and rescaling values. We will also be using the <a href="https://www.tidyverse.org/">tidyverse</a> and <a href="https://glue.tidyverse.org/">glue</a> packages for general data wrangling and <a href="https://glin.github.io/reactable/index.html">reactable</a> to preview our data as we go along.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># libraries</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 'tidy' data wrangling</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(plotly) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sankey visualisation framework</span></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(reactable) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># viewing interactive datatables</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(glue) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># concatenating strings</span></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidygraph) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># api for graph / network manipulation</span></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(scales) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># used for colour transformation</span></span></code></pre></div>
</div>
<section id="get-the-data" class="level2">
<h2 class="anchored" data-anchor-id="get-the-data">Get the data</h2>
<p>In this example we will work with a simplified set of data focused on invitations.</p>
<p>The invites table holds details of when people were sent a letter or message inviting them to take part, how many times they were invited and how the person responded.</p>
<p>The people eligible for the programme are identified up-front and are represented by a unique ID with one row per person. Let‚Äôs assume each person receives at least one invitation to take part, they can have one of three outcomes:</p>
<ol type="1">
<li><p>They accept the invitation and agree to take part,</p></li>
<li><p>They decline the invitation,</p></li>
<li><p>They do not respond to the invitation.</p></li>
</ol>
<p>If the person doesn‚Äôt respond to the first invitation they may be sent a second invitation and could be offered a third invitation if they didn‚Äôt respond to the second.</p>
<p>Here is the specification for our simplified invites table:</p>
<table class="caption-top table">
<caption>Invites specification</caption>
<colgroup>
<col style="width: 14%">
<col style="width: 8%">
<col style="width: 75%">
</colgroup>
<thead>
<tr class="header">
<th>Field</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Participant ID</td>
<td>Integer</td>
<td>A unique identifier for each person.</td>
</tr>
<tr class="even">
<td>Invite date 1</td>
<td>Date</td>
<td><p>The date the person was first invited to participate.</p>
<p>Every person will have a date in this field.</p></td>
</tr>
<tr class="odd">
<td>Invite date 2</td>
<td>Date</td>
<td>The date a second invitation was sent.</td>
</tr>
<tr class="even">
<td>Invite date 3</td>
<td>Date</td>
<td>The date a third invitation was sent.</td>
</tr>
<tr class="odd">
<td>Invite outcome</td>
<td>Text</td>
<td>The outcome from the invite, one of either ‚ÄòAccepted‚Äô, ‚ÄòDeclined‚Äô or ‚ÄòNo response‚Äô.</td>
</tr>
</tbody>
</table>
<p>Everyone receives at least one invite. Assuming a third of these respond (to either accept or decline) then two-thirds receive a follow-up invite. Of these, we assume half respond, meaning the remaining participants receive a third invite.</p>
<p>Here we generate 100 rows of example data to populate our table.</p>
<div class="cell fig-cap-location-top">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" data-cap-location="top" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set a randomisation seed for reproducibility</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1234</span>)</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define some parameters</span></span>
<span id="cb2-5">start_date <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2019-01-01"</span>)</span>
<span id="cb2-6">end_date <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2021-01-01"</span>)</span>
<span id="cb2-7">rows <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb2-8"></span>
<span id="cb2-9">df_invites_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb2-10">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create a unique id for each participant</span></span>
<span id="cb2-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">participant_id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>rows,</span>
<span id="cb2-12"></span>
<span id="cb2-13">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create a random initial invite date between our start and end dates</span></span>
<span id="cb2-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">invite_1_date =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb2-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(start_date, end_date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"day"</span>),</span>
<span id="cb2-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> rows, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> T</span>
<span id="cb2-17">  ),</span>
<span id="cb2-18"></span>
<span id="cb2-19">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create a random outcome for this participant</span></span>
<span id="cb2-20">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">invite_outcome =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb2-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Accepted"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Declined"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No response"</span>),</span>
<span id="cb2-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> rows, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> T</span>
<span id="cb2-23">  )</span>
<span id="cb2-24">)</span>
<span id="cb2-25"></span>
<span id="cb2-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># take a sample of participants and allocate them a second invite date</span></span>
<span id="cb2-27">df_invites_2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_invites_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-28">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sample two thirds of participants to get a second invite</span></span>
<span id="cb2-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_sample</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prop =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-30">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># allocate a date between 10 and 30 days following the first</span></span>
<span id="cb2-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb2-32">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">invite_2_date =</span> invite_1_date <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> T)</span>
<span id="cb2-33">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-34">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># keep just id and second date</span></span>
<span id="cb2-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(participant_id, invite_2_date)</span>
<span id="cb2-36"></span>
<span id="cb2-37"></span>
<span id="cb2-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># take a sample of those with a second invite and allocate them a third invite date</span></span>
<span id="cb2-39">df_invites_3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_invites_2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-40">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sample half of these to get a third invite</span></span>
<span id="cb2-41">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_sample</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prop =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-42">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># allocate a date between 10 to 30 days following the second</span></span>
<span id="cb2-43">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb2-44">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">invite_3_date =</span> invite_2_date <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> T)</span>
<span id="cb2-45">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-46">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># keep just id and second date</span></span>
<span id="cb2-47">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(participant_id, invite_3_date)</span>
<span id="cb2-48"></span>
<span id="cb2-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># combine the 2nd and 3rd invites with the first table</span></span>
<span id="cb2-50">df_invites <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_invites_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-51">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(</span>
<span id="cb2-52">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> df_invites_2,</span>
<span id="cb2-53">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"participant_id"</span></span>
<span id="cb2-54">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-55">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(</span>
<span id="cb2-56">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> df_invites_3,</span>
<span id="cb2-57">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"participant_id"</span></span>
<span id="cb2-58">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-59">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># move the outcome field after the third invite</span></span>
<span id="cb2-60">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">relocate</span>(invite_outcome, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.after =</span> invite_3_date)</span>
<span id="cb2-61"></span>
<span id="cb2-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># housekeeping</span></span>
<span id="cb2-63"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span>(df_invites_1, df_invites_2, df_invites_3, start_date, end_date, rows)</span>
<span id="cb2-64"></span>
<span id="cb2-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># view our data</span></span>
<span id="cb2-66">df_invites <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-67">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">defaultPageSize =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div class="reactable html-widget html-fill-item" id="htmlwidget-32c4c764f8f4ad29cf77" style="width:auto;height:auto;"></div>
<script type="application/json" data-for="htmlwidget-32c4c764f8f4ad29cf77">{"x":{"tag":{"name":"Reactable","attribs":{"data":{"participant_id":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"invite_1_date":["2019-10-11","2019-04-11","2020-09-14","2020-10-06","2020-02-04","2019-04-08","2019-04-13","2020-12-26","2020-08-24","2019-11-22","2019-03-20","2019-09-27","2020-01-17","2019-07-03","2020-07-27","2019-01-04","2020-10-22","2020-07-05","2019-07-31","2019-07-14","2020-05-25","2020-04-23","2020-08-27","2020-09-25","2020-07-31","2020-05-24","2020-11-17","2020-02-28","2020-01-14","2019-04-18","2019-05-11","2019-12-09","2019-02-10","2020-09-18","2019-10-25","2019-09-15","2020-09-20","2019-03-20","2019-07-01","2019-11-01","2019-12-24","2020-11-26","2019-11-03","2019-11-01","2019-08-09","2020-07-14","2019-11-09","2019-05-16","2019-05-25","2019-05-03","2019-08-22","2020-08-30","2020-05-09","2020-06-17","2019-10-24","2019-07-27","2019-05-11","2020-07-22","2020-06-05","2019-09-05","2019-12-31","2020-10-26","2020-10-04","2020-08-17","2020-03-09","2019-08-06","2020-12-27","2020-05-22","2019-10-03","2019-06-18","2019-03-12","2020-07-26","2019-11-22","2020-04-29","2020-10-28","2020-04-04","2019-03-01","2020-03-24","2020-07-01","2019-01-19","2020-10-10","2020-09-29","2020-10-31","2019-11-15","2019-04-26","2019-05-25","2019-04-12","2019-08-02","2020-01-25","2020-08-19","2020-08-19","2019-06-09","2019-03-18","2020-06-12","2019-05-06","2019-09-19","2020-03-17","2020-10-03","2019-06-30","2019-06-12"],"invite_2_date":[null,"2019-04-26","2020-10-03",null,"2020-03-05",null,null,null,"2020-09-13","2019-12-14","2019-04-13","2019-10-10","2020-02-04","2019-07-27","2020-08-09",null,null,null,null,"2019-08-10","2020-06-17","2020-05-21","2020-09-10","2020-10-12","2020-08-23",null,"2020-12-16",null,"2020-02-12","2019-04-29","2019-05-26","2020-01-04","2019-03-10","2020-10-11",null,"2019-09-28","2020-09-30","2019-04-17",null,null,"2020-01-18",null,"2019-11-28","2019-11-14","2019-08-28","2020-08-10","2019-12-07","2019-05-26",null,"2019-05-29","2019-09-10","2020-09-23","2020-05-21",null,"2019-11-15",null,"2019-06-06","2020-08-07","2020-06-16","2019-09-29","2020-01-13",null,null,null,"2020-03-28","2019-09-05","2021-01-21",null,"2019-10-18","2019-07-10",null,null,"2019-12-18","2020-05-23","2020-11-24","2020-04-26","2019-03-11","2020-04-16","2020-07-22",null,"2020-11-09","2020-10-29","2020-11-28",null,null,null,"2019-05-04",null,"2020-02-12","2020-09-07","2020-09-11",null,null,"2020-07-06",null,null,null,"2020-10-20","2019-07-22","2019-07-01"],"invite_3_date":[null,"2019-05-24","2020-10-16",null,"2020-04-01",null,null,null,"2020-10-01","2020-01-13","2019-05-05",null,null,"2019-08-12",null,null,null,null,null,"2019-09-06","2020-07-04","2020-06-14","2020-09-22","2020-11-11","2020-09-18",null,null,null,null,null,null,null,null,null,null,null,null,"2019-05-02",null,null,null,null,"2019-12-09","2019-12-04","2019-09-22",null,null,null,null,null,"2019-09-23",null,null,null,"2019-12-09",null,"2019-06-30",null,"2020-07-16","2019-10-10",null,null,null,null,null,"2019-09-29",null,null,null,null,null,null,"2019-12-31",null,null,null,"2019-03-27","2020-05-12","2020-08-03",null,"2020-11-29",null,"2020-12-22",null,null,null,null,null,"2020-03-12",null,"2020-09-28",null,null,"2020-08-04",null,null,null,"2020-11-10",null,null],"invite_outcome":["Declined","Accepted","Declined","Declined","Declined","Accepted","No response","No response","Accepted","Declined","Declined","Accepted","Accepted","Accepted","Accepted","Declined","Declined","Declined","No response","Declined","Declined","No response","No response","No response","Accepted","Declined","Declined","No response","No response","No response","No response","Accepted","No response","No response","No response","Declined","Declined","No response","Declined","Accepted","Accepted","Accepted","No response","No response","No response","Accepted","Accepted","No response","Declined","No response","Accepted","Accepted","No response","Declined","Accepted","No response","No response","Declined","Declined","Declined","Accepted","Accepted","No response","Accepted","Accepted","Accepted","Accepted","No response","No response","Declined","Accepted","Declined","Declined","Declined","No response","Declined","No response","No response","No response","Declined","No response","No response","Accepted","No response","Accepted","No response","No response","Declined","No response","No response","Declined","Declined","No response","Accepted","Declined","Declined","Accepted","No response","Declined","Accepted"]},"columns":[{"id":"participant_id","name":"participant_id","type":"numeric"},{"id":"invite_1_date","name":"invite_1_date","type":"Date"},{"id":"invite_2_date","name":"invite_2_date","type":"Date"},{"id":"invite_3_date","name":"invite_3_date","type":"Date"},{"id":"invite_outcome","name":"invite_outcome","type":"character"}],"defaultPageSize":5,"dataKey":"812760e5c2269ef93c4668c581c72808"},"children":[]},"class":"reactR_markup"},"evals":[],"jsHooks":[]}</script>
<p>Generated invite table</p>
</div>
</div>
</section>
<section id="determine-milestone-outcomes" class="level2">
<h2 class="anchored" data-anchor-id="determine-milestone-outcomes">Determine milestone outcomes</h2>
<p>The next step is to take our source table and convert the data into a series of milestones (and associated outcomes) that represents how our invited participants moved through the pathway.</p>
<p>In our example we have five milestones to represent in our Sankey plot:</p>
<ul>
<li><p>Our eligible population (everyone in our invites table),</p></li>
<li><p>The result from the first invitation,</p></li>
<li><p>The result from the second invitation,</p></li>
<li><p>The result from the third invitation,</p></li>
<li><p>The overall invite outcome.</p></li>
</ul>
<p>Aside from the eligible population, where everyone starts with the same value, participants will have one of several outcomes at each milestone. This step is about naming these milestones and the outcomes.</p>
<p>It is important that each milestone-outcome has unique values. An outcome of ‚ÄòNo response‚Äô can be recorded against the first, second and third invite, and we wish to see these outcomes separately represented on the Sankey (rather than just one ‚ÄòNo response‚Äô), so each outcome must be made unique. In this example we prefix the outcome from each invite with the number of the invite, e.g.&nbsp;‚ÄòInvite 1 No response‚Äô.</p>
<p>The reason for this will become clearer when we come to plot the Sankey, but for now we produce these milestone-outcomes from our invites table.</p>
<div class="cell fig-cap-location-top">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" data-cap-location="top" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">df_milestones <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_invites <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb3-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># everyone starts in the eligible population</span></span>
<span id="cb3-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">start_population =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eligible population"</span>,</span>
<span id="cb3-5"></span>
<span id="cb3-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># work out what happened following the first invite</span></span>
<span id="cb3-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">invite_1_outcome =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb3-8">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if a second invite was sent we assume there was no outcome from the first</span></span>
<span id="cb3-9">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(invite_2_date) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invitation 1 No response"</span>,</span>
<span id="cb3-10">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># otherwise the overall outcome resulted from the first invite</span></span>
<span id="cb3-11">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.default =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invitation 1 {invite_outcome}"</span>)</span>
<span id="cb3-12">    ),</span>
<span id="cb3-13"></span>
<span id="cb3-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># work out what happened following the second invite</span></span>
<span id="cb3-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">invite_2_outcome =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb3-16">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if a third invite was sent we assume there was no outcome from the second</span></span>
<span id="cb3-17">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(invite_3_date) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invitation 2 No response"</span>,</span>
<span id="cb3-18">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if a second invite was sent but no third then</span></span>
<span id="cb3-19">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(invite_2_date) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invitation 2 {invite_outcome}"</span>),</span>
<span id="cb3-20">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># default to NA if neither of the above are true</span></span>
<span id="cb3-21">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.default =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span></span>
<span id="cb3-22">    ),</span>
<span id="cb3-23"></span>
<span id="cb3-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># work out what happened following the third invite</span></span>
<span id="cb3-25">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">invite_3_outcome =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb3-26">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if a third invite was sent then the outcome is the overall outcome</span></span>
<span id="cb3-27">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(invite_3_date) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invitation 3 {invite_outcome}"</span>),</span>
<span id="cb3-28">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># otherwise mark as NA</span></span>
<span id="cb3-29">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.default =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span></span>
<span id="cb3-30">    )</span>
<span id="cb3-31">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-32">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># exclude the dates as they are no longer needed</span></span>
<span id="cb3-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contains</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_date"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-34">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># move the overall invite outcome to the end</span></span>
<span id="cb3-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">relocate</span>(invite_outcome, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.after =</span> invite_3_outcome)</span>
<span id="cb3-36"></span>
<span id="cb3-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># view our data</span></span>
<span id="cb3-38">df_milestones <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">defaultPageSize =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div class="reactable html-widget html-fill-item" id="htmlwidget-3090b8bce6706e7d4608" style="width:auto;height:auto;"></div>
<script type="application/json" data-for="htmlwidget-3090b8bce6706e7d4608">{"x":{"tag":{"name":"Reactable","attribs":{"data":{"participant_id":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"start_population":["Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population","Eligible population"],"invite_1_outcome":["Invitation 1 Declined","Invitation 1 No response","Invitation 1 No response","Invitation 1 Declined","Invitation 1 No response","Invitation 1 Accepted","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 Declined","Invitation 1 Declined","Invitation 1 Declined","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 Declined","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 Declined","Invitation 1 Accepted","Invitation 1 No response","Invitation 1 Accepted","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 Declined","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 Declined","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 Accepted","Invitation 1 No response","Invitation 1 Accepted","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 Accepted","Invitation 1 Declined","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 Declined","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 Accepted","Invitation 1 No response","Invitation 1 No response","Invitation 1 Declined","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 Declined","Invitation 1 No response","Invitation 1 No response","Invitation 1 Declined","Invitation 1 Declined","Invitation 1 Accepted","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response"],"invite_2_outcome":[null,"Invitation 2 No response","Invitation 2 No response",null,"Invitation 2 No response",null,null,null,"Invitation 2 No response","Invitation 2 No response","Invitation 2 No response","Invitation 2 Accepted","Invitation 2 Accepted","Invitation 2 No response","Invitation 2 Accepted",null,null,null,null,"Invitation 2 No response","Invitation 2 No response","Invitation 2 No response","Invitation 2 No response","Invitation 2 No response","Invitation 2 No response",null,"Invitation 2 Declined",null,"Invitation 2 No response","Invitation 2 No response","Invitation 2 No response","Invitation 2 Accepted","Invitation 2 No response","Invitation 2 No response",null,"Invitation 2 Declined","Invitation 2 Declined","Invitation 2 No response",null,null,"Invitation 2 Accepted",null,"Invitation 2 No response","Invitation 2 No response","Invitation 2 No response","Invitation 2 Accepted","Invitation 2 Accepted","Invitation 2 No response",null,"Invitation 2 No response","Invitation 2 No response","Invitation 2 Accepted","Invitation 2 No response",null,"Invitation 2 No response",null,"Invitation 2 No response","Invitation 2 Declined","Invitation 2 No response","Invitation 2 No response","Invitation 2 Accepted",null,null,null,"Invitation 2 Accepted","Invitation 2 No response","Invitation 2 Accepted",null,"Invitation 2 No response","Invitation 2 Declined",null,null,"Invitation 2 No response","Invitation 2 Declined","Invitation 2 No response","Invitation 2 Declined","Invitation 2 No response","Invitation 2 No response","Invitation 2 No response",null,"Invitation 2 No response","Invitation 2 No response","Invitation 2 No response",null,null,null,"Invitation 2 No response",null,"Invitation 2 No response","Invitation 2 No response","Invitation 2 No response",null,null,"Invitation 2 No response",null,null,null,"Invitation 2 No response","Invitation 2 Declined","Invitation 2 Accepted"],"invite_3_outcome":[null,"Invitation 3 Accepted","Invitation 3 Declined",null,"Invitation 3 Declined",null,null,null,"Invitation 3 Accepted","Invitation 3 Declined","Invitation 3 Declined",null,null,"Invitation 3 Accepted",null,null,null,null,null,"Invitation 3 Declined","Invitation 3 Declined","Invitation 3 No response","Invitation 3 No response","Invitation 3 No response","Invitation 3 Accepted",null,null,null,null,null,null,null,null,null,null,null,null,"Invitation 3 No response",null,null,null,null,"Invitation 3 No response","Invitation 3 No response","Invitation 3 No response",null,null,null,null,null,"Invitation 3 Accepted",null,null,null,"Invitation 3 Accepted",null,"Invitation 3 No response",null,"Invitation 3 Declined","Invitation 3 Declined",null,null,null,null,null,"Invitation 3 Accepted",null,null,null,null,null,null,"Invitation 3 Declined",null,null,null,"Invitation 3 No response","Invitation 3 No response","Invitation 3 No response",null,"Invitation 3 No response",null,"Invitation 3 Accepted",null,null,null,null,null,"Invitation 3 No response",null,"Invitation 3 Declined",null,null,"Invitation 3 Accepted",null,null,null,"Invitation 3 No response",null,null],"invite_outcome":["Declined","Accepted","Declined","Declined","Declined","Accepted","No response","No response","Accepted","Declined","Declined","Accepted","Accepted","Accepted","Accepted","Declined","Declined","Declined","No response","Declined","Declined","No response","No response","No response","Accepted","Declined","Declined","No response","No response","No response","No response","Accepted","No response","No response","No response","Declined","Declined","No response","Declined","Accepted","Accepted","Accepted","No response","No response","No response","Accepted","Accepted","No response","Declined","No response","Accepted","Accepted","No response","Declined","Accepted","No response","No response","Declined","Declined","Declined","Accepted","Accepted","No response","Accepted","Accepted","Accepted","Accepted","No response","No response","Declined","Accepted","Declined","Declined","Declined","No response","Declined","No response","No response","No response","Declined","No response","No response","Accepted","No response","Accepted","No response","No response","Declined","No response","No response","Declined","Declined","No response","Accepted","Declined","Declined","Accepted","No response","Declined","Accepted"]},"columns":[{"id":"participant_id","name":"participant_id","type":"numeric"},{"id":"start_population","name":"start_population","type":"character"},{"id":"invite_1_outcome","name":"invite_1_outcome","type":["glue","character"]},{"id":"invite_2_outcome","name":"invite_2_outcome","type":["glue","character"]},{"id":"invite_3_outcome","name":"invite_3_outcome","type":["glue","character"]},{"id":"invite_outcome","name":"invite_outcome","type":"character"}],"defaultPageSize":5,"dataKey":"a450da1debd7915b64a9b7311b7f1d33"},"children":[]},"class":"reactR_markup"},"evals":[],"jsHooks":[]}</script>
<p>Milestone-outcomes for participants</p>
</div>
</div>
</section>
<section id="calculate-flows" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="calculate-flows">Calculate flows</h2>
<p>Next we take pairs of milestone-outcomes and calculate the number of participants that moved between them.</p>
<p>Here we utilise the power of <code>dplyr::summarise</code> with an argument <code>.by</code> to group by our data before counting the number of unique participants who move between our start and end groups.</p>
<p>For invites 2 and 3 we perform two sets of summaries:</p>
<ol type="1">
<li><p>The first where the values in the <code>to</code> and <code>from</code> fields contain details.</p></li>
<li><p>The second to capture cases where the <code>to</code> destination is NULL. This is because the participant responded at the previous invite so there was no subsequent invite. In these cases we flow the participant to the overall invite outcome.<sup>2</sup></p></li>
</ol>
<div class="no-row-height column-margin column-container"><div id="fn2"><p><sup>2</sup>&nbsp;If you are thinking there is a lot of repetition here, you‚Äôre right. In practice I abstracted both steps to a function and passed in the parameters for the <code>from</code> and <code>to</code> variables and simplified my workflow a little, however, I‚Äôm showing it in plain form here for simplification.</p></div></div><div class="cell fig-cap-location-top">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" data-cap-location="top" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">df_flows <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(</span>
<span id="cb4-2"></span>
<span id="cb4-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># flow from population to invite 1</span></span>
<span id="cb4-4">  df_milestones <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(start_population) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(invite_1_outcome)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from =</span> start_population, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> invite_1_outcome) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb4-8">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">flow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n_distinct</span>(participant_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> T),</span>
<span id="cb4-9">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(from, to)</span>
<span id="cb4-10">    ),</span>
<span id="cb4-11"></span>
<span id="cb4-12">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># flow from invite 1 to invite 2 (where not NA)</span></span>
<span id="cb4-13">  df_milestones <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(invite_1_outcome) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(invite_2_outcome)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from =</span> invite_1_outcome, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> invite_2_outcome) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb4-17">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">flow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n_distinct</span>(participant_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> T),</span>
<span id="cb4-18">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(from, to)</span>
<span id="cb4-19">    ),</span>
<span id="cb4-20"></span>
<span id="cb4-21">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># flow from invite 1 to overall invite outcome (where invite 2 is NA)</span></span>
<span id="cb4-22">  df_milestones <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-23">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(invite_1_outcome) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(invite_2_outcome)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-24">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from =</span> invite_1_outcome, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> invite_outcome) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-25">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb4-26">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">flow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n_distinct</span>(participant_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> T),</span>
<span id="cb4-27">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(from, to)</span>
<span id="cb4-28">    ),</span>
<span id="cb4-29"></span>
<span id="cb4-30">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># flow from invite 2 to invite 3 (where not NA)</span></span>
<span id="cb4-31">  df_milestones <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-32">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(invite_2_outcome) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(invite_3_outcome)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-33">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from =</span> invite_2_outcome, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> invite_3_outcome) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-34">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb4-35">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">flow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n_distinct</span>(participant_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> T),</span>
<span id="cb4-36">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(from, to)</span>
<span id="cb4-37">    ),</span>
<span id="cb4-38"></span>
<span id="cb4-39">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># flow from invite 2 to overall invite outcome (where invite 3 is NA)</span></span>
<span id="cb4-40">  df_milestones <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-41">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(invite_2_outcome) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(invite_3_outcome)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-42">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from =</span> invite_2_outcome, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> invite_outcome) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-43">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb4-44">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">flow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n_distinct</span>(participant_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> T),</span>
<span id="cb4-45">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(from, to)</span>
<span id="cb4-46">    ),</span>
<span id="cb4-47"></span>
<span id="cb4-48">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># final flow - invite 3 to overall outcome (where both are not NA)</span></span>
<span id="cb4-49">  df_milestones <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-50">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(invite_3_outcome) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(invite_outcome)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-51">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from =</span> invite_3_outcome, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> invite_outcome) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-52">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb4-53">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">flow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n_distinct</span>(participant_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> T),</span>
<span id="cb4-54">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(from, to)</span>
<span id="cb4-55">    )</span>
<span id="cb4-56">)</span>
<span id="cb4-57"></span>
<span id="cb4-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># view our data</span></span>
<span id="cb4-59">df_flows <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-60">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">defaultPageSize =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div class="reactable html-widget html-fill-item" id="htmlwidget-70e615292803fb127878" style="width:auto;height:auto;"></div>
<script type="application/json" data-for="htmlwidget-70e615292803fb127878">{"x":{"tag":{"name":"Reactable","attribs":{"data":{"from":["Eligible population","Eligible population","Eligible population","Invitation 1 No response","Invitation 1 No response","Invitation 1 No response","Invitation 1 Declined","Invitation 1 Accepted","Invitation 1 No response","Invitation 2 No response","Invitation 2 No response","Invitation 2 No response","Invitation 2 Accepted","Invitation 2 Declined","Invitation 2 No response","Invitation 3 Accepted","Invitation 3 Declined","Invitation 3 No response"],"to":["Invitation 1 Declined","Invitation 1 No response","Invitation 1 Accepted","Invitation 2 No response","Invitation 2 Accepted","Invitation 2 Declined","Declined","Accepted","No response","Invitation 3 Accepted","Invitation 3 Declined","Invitation 3 No response","Accepted","Declined","No response","Accepted","Declined","No response"],"flow":[15,77,8,46,12,8,15,8,11,9,10,14,12,8,13,9,10,14]},"columns":[{"id":"from","name":"from","type":["glue","character"]},{"id":"to","name":"to","type":["glue","character"]},{"id":"flow","name":"flow","type":"numeric"}],"defaultPageSize":5,"dataKey":"742d09c4727207338778e12e06444f4b"},"children":[]},"class":"reactR_markup"},"evals":[],"jsHooks":[]}</script>
<p>Flows of participants between milestones</p>
</div>
</div>
</section>
</section>
<section id="sankey-plot" class="level1">
<h1>Sankey plot</h1>
<p>We now have a neat little summary of movements of participants between the milestones in our recruitment pathway. However, this ‚Äòtidy‚Äô data isn‚Äôt the format required by <a href="https://plotly.com/r/sankey-diagram/">plotly</a>, so the next steps are to prepare it ready for plotting.</p>
<section id="preparing-for-plotly" class="level2">
<h2 class="anchored" data-anchor-id="preparing-for-plotly">Preparing for plotly</h2>
<p>Plotly expects to be fed two sets of data:</p>
<ol type="1">
<li><p>Nodes - these are the milestones we have in our <code>from</code> and <code>to</code> fields,</p></li>
<li><p>Edges - these are the flows that occur between nodes, the <code>flow</code> in our table.</p></li>
</ol>
<p>It is possible to extract this data by hand but I found using the <a href="https://tidygraph.data-imaginist.com">tidygraph</a> package was much easier and more convenient.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">df_sankey <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_flows <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert our flows data to a tidy graph object</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tbl_graph</span>()</span></code></pre></div>
</div>
<p>The tidygraph package splits our data into nodes and edges. We can selectively work on each by ‚Äòactivating‚Äô them - here is the nodes list:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">df_sankey <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">activate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">what =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nodes"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">defaultPageSize =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="reactable html-widget html-fill-item" id="htmlwidget-6ac9266d042b15dee292" style="width:auto;height:auto;"></div>
<script type="application/json" data-for="htmlwidget-6ac9266d042b15dee292">{"x":{"tag":{"name":"Reactable","attribs":{"data":{"name":["Eligible population","Invitation 1 No response","Invitation 1 Declined","Invitation 1 Accepted","Invitation 2 No response","Invitation 2 Accepted","Invitation 2 Declined","Invitation 3 Accepted","Invitation 3 Declined","Invitation 3 No response","Declined","Accepted","No response"]},"columns":[{"id":"name","name":"name","type":"character"}],"defaultPageSize":5,"dataKey":"c8916df8221f76b5b09469d3a29a7b47"},"children":[]},"class":"reactR_markup"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>You can see each unique node name listed. The row numbers for these nodes are used as reference IDs in the edges object:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">df_sankey <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">activate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">what =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"edges"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">defaultPageSize =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="reactable html-widget html-fill-item" id="htmlwidget-c70f65bdbd88f986c924" style="width:auto;height:auto;"></div>
<script type="application/json" data-for="htmlwidget-c70f65bdbd88f986c924">{"x":{"tag":{"name":"Reactable","attribs":{"data":{"from":[1,1,1,2,2,2,3,4,2,5,5,5,6,7,5,8,9,10],"to":[3,2,4,5,6,7,11,12,13,8,9,10,12,11,13,12,11,13],"flow":[15,77,8,46,12,8,15,8,11,9,10,14,12,8,13,9,10,14]},"columns":[{"id":"from","name":"from","type":"numeric"},{"id":"to","name":"to","type":"numeric"},{"id":"flow","name":"flow","type":"numeric"}],"defaultPageSize":5,"dataKey":"a889e9b644c7e0f45f526b0ebde36ebd"},"children":[]},"class":"reactR_markup"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>We now have enough information to generate our Sankey.</p>
<p>First we extract our nodes and edges to separate data frames then convert the ID values to be zero-based (starts at 0) as this is what plotly is expecting. To do this is as simple as subtracting 1 from the value of the IDs.</p>
<p>Finally we pass these two dataframes to plotly‚Äôs <code>node</code> and <code>link</code> function inputs to generate the plot.</p>
<div class="cell fig-cap-location-top">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" data-cap-location="top" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># extract the nodes to a dataframe</span></span>
<span id="cb8-2">nodes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_sankey <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">activate</span>(nodes) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb8-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row_number</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb8-7">  )</span>
<span id="cb8-8"></span>
<span id="cb8-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># extract the edges to a dataframe</span></span>
<span id="cb8-10">edges <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_sankey <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">activate</span>(edges) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb8-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from =</span> from <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb8-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> to <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb8-16">  )</span>
<span id="cb8-17"></span>
<span id="cb8-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot our sankey</span></span>
<span id="cb8-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_ly</span>(</span>
<span id="cb8-20">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># setup</span></span>
<span id="cb8-21">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sankey"</span>,</span>
<span id="cb8-22">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">orientation =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"h"</span>,</span>
<span id="cb8-23">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrangement =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"snap"</span>,</span>
<span id="cb8-24"></span>
<span id="cb8-25">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use our node data</span></span>
<span id="cb8-26">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">node =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb8-27">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> nodes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>name</span>
<span id="cb8-28">  ),</span>
<span id="cb8-29"></span>
<span id="cb8-30">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use our link data</span></span>
<span id="cb8-31">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">link =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb8-32">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">source =</span> edges<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>from,</span>
<span id="cb8-33">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">target =</span> edges<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>to,</span>
<span id="cb8-34">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> edges<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>flow</span>
<span id="cb8-35">  )</span>
<span id="cb8-36">)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div class="plotly html-widget html-fill-item" id="htmlwidget-320c24d2aa0bcbd08027" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-320c24d2aa0bcbd08027">{"x":{"visdat":{"268e2574912d":["function () ","plotlyVisDat"]},"cur_data":"268e2574912d","attrs":{"268e2574912d":{"orientation":"h","arrangement":"snap","node":{"label":["Eligible population","Invitation 1 No response","Invitation 1 Declined","Invitation 1 Accepted","Invitation 2 No response","Invitation 2 Accepted","Invitation 2 Declined","Invitation 3 Accepted","Invitation 3 Declined","Invitation 3 No response","Declined","Accepted","No response"]},"link":{"source":[0,0,0,1,1,1,2,3,1,4,4,4,5,6,4,7,8,9],"target":[2,1,3,4,5,6,10,11,12,7,8,9,11,10,12,11,10,12],"value":[15,77,8,46,12,8,15,8,11,9,10,14,12,8,13,9,10,14]},"alpha_stroke":1,"sizes":[10,100],"spans":[1,20],"type":"sankey"}},"layout":{"margin":{"b":40,"l":60,"t":25,"r":10},"hovermode":"closest","showlegend":false},"source":"A","config":{"modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"data":[{"orientation":"h","arrangement":"snap","node":{"label":["Eligible population","Invitation 1 No response","Invitation 1 Declined","Invitation 1 Accepted","Invitation 2 No response","Invitation 2 Accepted","Invitation 2 Declined","Invitation 3 Accepted","Invitation 3 Declined","Invitation 3 No response","Declined","Accepted","No response"]},"link":{"source":[0,0,0,1,1,1,2,3,1,4,4,4,5,6,4,7,8,9],"target":[2,1,3,4,5,6,10,11,12,7,8,9,11,10,12,11,10,12],"value":[15,77,8,46,12,8,15,8,11,9,10,14,12,8,13,9,10,14]},"type":"sankey","frame":null}],"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.20000000000000001,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
<p>Our first sankey</p>
</div>
</div>
<p>Not bad!</p>
<p>We can see the structure of our Sankey now. Can you see the relative proportions of participants who did or didn‚Äôt respond to our first invite? Marvel at how those who responded to the first invite flow into our final outcome. How about those who didn‚Äôt respond to the first invitation go on to receive a second invite?</p>
<p>Plotly‚Äôs charts are interactive. Try hovering your cursor over the nodes and edges to highlight them and a pop-up box will appear giving you additional details. You can reorder the vertical position of the nodes by dragging them above or below an adjacent node.</p>
<p>This looks functional.</p>
</section>
<section id="styling-our-sankey" class="level2">
<h2 class="anchored" data-anchor-id="styling-our-sankey">Styling our Sankey</h2>
<p>Now we have the foundations of our Sankey I‚Äôd like to move on to its presentation. Specifically I‚Äôd like to:</p>
<ul>
<li><p>use colour coding to clearly group those who accept or decline the invite,</p></li>
<li><p>improve the readability of the node titles,</p></li>
<li><p>add additional information to the pop-up boxes when you hover over nodes and edges, and</p></li>
<li><p>control the positioning of the nodes in the plot.</p></li>
</ul>
<p>As our <code>nodes</code> and <code>edges</code> objects are dataframes it is straightforward to add this styling information directly to them.</p>
<p>For the nodes object we define colours based on the name of each node and manually position them in the plot</p>
<div class="cell fig-cap-location-top">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" data-cap-location="top" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get the eligible population as a single value</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># NB, will be used to work out % amounts in each node and edge</span></span>
<span id="cb9-3">temp_eligible_pop <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_flows <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(from <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eligible population"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(flow, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> T)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(total)</span>
<span id="cb9-7"></span>
<span id="cb9-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># style our nodes object</span></span>
<span id="cb9-9">nodes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> nodes <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb9-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># colour ----</span></span>
<span id="cb9-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add colour definitions, green for accepted, red for declined</span></span>
<span id="cb9-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb9-14">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Accepted"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#44bd32"</span>,</span>
<span id="cb9-15">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Declined"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#c23616"</span>,</span>
<span id="cb9-16">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No response"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#7f8fa6"</span>,</span>
<span id="cb9-17">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eligible population"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#7f8fa6"</span></span>
<span id="cb9-18">    ),</span>
<span id="cb9-19"></span>
<span id="cb9-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add a semi-transparent colour for the edges based on node colours</span></span>
<span id="cb9-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour_fade =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">col2hcl</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> colour, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>),</span>
<span id="cb9-22"></span>
<span id="cb9-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># positioning ----</span></span>
<span id="cb9-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># NB, I found that to position nodes you need to supply both</span></span>
<span id="cb9-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># horizontal and vertical positions</span></span>
<span id="cb9-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># NNB, it was a bit of trial and error to get the these positions just</span></span>
<span id="cb9-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># right</span></span>
<span id="cb9-28"></span>
<span id="cb9-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># horizontal positions (0 = left, 1 = right)</span></span>
<span id="cb9-30">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb9-31">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eligible population"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb9-32">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invitation 1"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb9-33">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invitation 2"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb9-34">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invitation 3"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb9-35">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.default =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb9-36">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rescale</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)),</span>
<span id="cb9-37"></span>
<span id="cb9-38">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># vertical position (1 = bottom, 0 = top)</span></span>
<span id="cb9-39">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb9-40">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eligible population"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb9-41">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># invite 1</span></span>
<span id="cb9-42">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invitation 1 Accepted"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb9-43">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invitation 1 No response"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb9-44">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invitation 1 Declined"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8.5</span>,</span>
<span id="cb9-45">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># invite 2</span></span>
<span id="cb9-46">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invitation 2 Accepted"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb9-47">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invitation 2 No response"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb9-48">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invitation 2 Declined"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.8</span>,</span>
<span id="cb9-49">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># invite 3</span></span>
<span id="cb9-50">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invitation 3 Accepted"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.7</span>,</span>
<span id="cb9-51">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invitation 3 No response"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.8</span>,</span>
<span id="cb9-52">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invitation 3 Declined"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.2</span>,</span>
<span id="cb9-53">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># final outcomes</span></span>
<span id="cb9-54">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Accepted"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb9-55">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No response"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb9-56">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Declined"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,</span>
<span id="cb9-57">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.default =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb9-58">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rescale</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.999</span>))</span>
<span id="cb9-59">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-60">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add in a custom field to show the percentage flow</span></span>
<span id="cb9-61">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(</span>
<span id="cb9-62">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> df_flows <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-63">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(to) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-64">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb9-65">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">flow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(flow, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> T),</span>
<span id="cb9-66">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">flow_perc =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">percent</span>(flow <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> temp_eligible_pop, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">accuracy =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>),</span>
<span id="cb9-67">      ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-68">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> to, flow_perc),</span>
<span id="cb9-69">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span></span>
<span id="cb9-70">  )</span>
<span id="cb9-71"></span>
<span id="cb9-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># view our nodes data</span></span>
<span id="cb9-73">nodes <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-74">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">defaultPageSize =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div class="reactable html-widget html-fill-item" id="htmlwidget-fde3e2fc872b00758a77" style="width:auto;height:auto;"></div>
<script type="application/json" data-for="htmlwidget-fde3e2fc872b00758a77">{"x":{"tag":{"name":"Reactable","attribs":{"data":{"name":["Eligible population","Invitation 1 No response","Invitation 1 Declined","Invitation 1 Accepted","Invitation 2 No response","Invitation 2 Accepted","Invitation 2 Declined","Invitation 3 Accepted","Invitation 3 Declined","Invitation 3 No response","Declined","Accepted","No response"],"id":[0,1,2,3,4,5,6,7,8,9,10,11,12],"colour":["#7f8fa6","#7f8fa6","#c23616","#44bd32","#7f8fa6","#44bd32","#c23616","#44bd32","#c23616","#7f8fa6","#c23616","#44bd32","#7f8fa6"],"colour_fade":["#7F8FA64C","#7F8FA64C","#C236164C","#44BD324C","#7F8FA64C","#44BD324C","#C236164C","#44BD324C","#C236164C","#7F8FA64C","#C236164C","#44BD324C","#7F8FA64C"],"x":[0.001,0.22575,0.22575,0.22575,0.4505,0.4505,0.4505,0.67525,0.67525,0.67525,0.9,0.9,0.9],"y":[0.533266666666667,0.533266666666667,0.999,0.001,0.533266666666667,0.134066666666667,0.905853333333333,0.227213333333333,0.826013333333333,0.63972,0.932466666666667,0.001,0.533266666666667],"flow_perc":[null,"77.0%","15.0%","8.0%","46.0%","12.0%","8.0%","9.0%","10.0%","14.0%","33.0%","29.0%","38.0%"]},"columns":[{"id":"name","name":"name","type":["glue","character"]},{"id":"id","name":"id","type":"numeric"},{"id":"colour","name":"colour","type":"character"},{"id":"colour_fade","name":"colour_fade","type":"character"},{"id":"x","name":"x","type":"numeric"},{"id":"y","name":"y","type":"numeric"},{"id":"flow_perc","name":"flow_perc","type":"character"}],"defaultPageSize":5,"dataKey":"846bee5df8dbde8324fb073f5cfd1799"},"children":[]},"class":"reactR_markup"},"evals":[],"jsHooks":[]}</script>
<p>Styling the nodes dataframe</p>
</div>
</div>
<p>Next we move to styling the edges, which is a much simpler prospect:</p>
<div class="cell fig-cap-location-top">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" data-cap-location="top" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">edges <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> edges <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb10-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add a label for each flow to tell us how many people are in each</span></span>
<span id="cb10-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">number</span>(flow, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">big.mark =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>),</span>
<span id="cb10-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add a percentage flow figure</span></span>
<span id="cb10-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">flow_perc =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">percent</span>(flow <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> temp_eligible_pop, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">accuracy =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb10-7">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add the faded colour from our nodes object to match the destinations</span></span>
<span id="cb10-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(</span>
<span id="cb10-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> nodes <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> id, colour_fade),</span>
<span id="cb10-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"to"</span></span>
<span id="cb10-12">  )</span>
<span id="cb10-13"></span>
<span id="cb10-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># view our edges data</span></span>
<span id="cb10-15">edges <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">defaultPageSize =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div class="reactable html-widget html-fill-item" id="htmlwidget-7ea7539abd342b70383a" style="width:auto;height:auto;"></div>
<script type="application/json" data-for="htmlwidget-7ea7539abd342b70383a">{"x":{"tag":{"name":"Reactable","attribs":{"data":{"from":[0,0,0,1,1,1,2,3,1,4,4,4,5,6,4,7,8,9],"to":[2,1,3,4,5,6,10,11,12,7,8,9,11,10,12,11,10,12],"flow":[15,77,8,46,12,8,15,8,11,9,10,14,12,8,13,9,10,14],"label":["15","77","8","46","12","8","15","8","11","9","10","14","12","8","13","9","10","14"],"flow_perc":["15.0%","77.0%","8.0%","46.0%","12.0%","8.0%","15.0%","8.0%","11.0%","9.0%","10.0%","14.0%","12.0%","8.0%","13.0%","9.0%","10.0%","14.0%"],"colour_fade":["#C236164C","#7F8FA64C","#44BD324C","#7F8FA64C","#44BD324C","#C236164C","#C236164C","#44BD324C","#7F8FA64C","#44BD324C","#C236164C","#7F8FA64C","#44BD324C","#C236164C","#7F8FA64C","#44BD324C","#C236164C","#7F8FA64C"]},"columns":[{"id":"from","name":"from","type":"numeric"},{"id":"to","name":"to","type":"numeric"},{"id":"flow","name":"flow","type":"numeric"},{"id":"label","name":"label","type":"character"},{"id":"flow_perc","name":"flow_perc","type":"character"},{"id":"colour_fade","name":"colour_fade","type":"character"}],"defaultPageSize":5,"dataKey":"adb0410c463383f1a7998a47c33b6495"},"children":[]},"class":"reactR_markup"},"evals":[],"jsHooks":[]}</script>
<p>Styling the edges dataframe</p>
</div>
</div>
<p>We now have stylised node and edge tables ready and can bring it all together. Note the use of <code>customdata</code> and <code>hovertemplate</code> help to bring in additional information and styling to the pop-up boxes that appear when you hover over each flow and node.</p>
<div class="cell fig-cap-location-top">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" data-cap-location="top" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot our stylised sankey</span></span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_ly</span>(</span>
<span id="cb11-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># setup</span></span>
<span id="cb11-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sankey"</span>,</span>
<span id="cb11-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">orientation =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"h"</span>,</span>
<span id="cb11-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrangement =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"snap"</span>,</span>
<span id="cb11-7"></span>
<span id="cb11-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use our node data</span></span>
<span id="cb11-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">node =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb11-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> nodes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>name,</span>
<span id="cb11-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> nodes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>colour,</span>
<span id="cb11-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> nodes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x,</span>
<span id="cb11-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> nodes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y,</span>
<span id="cb11-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">customdata =</span> nodes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>flow_perc,</span>
<span id="cb11-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hovertemplate =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%{label}&lt;br /&gt;&lt;b&gt;%{value}&lt;/b&gt; participants&lt;br /&gt;&lt;b&gt;%{customdata}&lt;/b&gt; of eligible population"</span></span>
<span id="cb11-16">  ),</span>
<span id="cb11-17"></span>
<span id="cb11-18">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use our edge data</span></span>
<span id="cb11-19">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">link =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb11-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">source =</span> edges<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>from,</span>
<span id="cb11-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">target =</span> edges<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>to,</span>
<span id="cb11-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> edges<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>flow,</span>
<span id="cb11-23">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> edges<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>label,</span>
<span id="cb11-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> edges<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>colour_fade,</span>
<span id="cb11-25">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">customdata =</span> edges<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>flow_perc,</span>
<span id="cb11-26">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hovertemplate =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%{source.label} ‚Üí %{target.label}&lt;br /&gt;&lt;b&gt;%{value}&lt;/b&gt; participants&lt;br /&gt;&lt;b&gt;%{customdata}&lt;/b&gt; of eligible population"</span></span>
<span id="cb11-27">  )</span>
<span id="cb11-28">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout</span>(</span>
<span id="cb11-30">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">font =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb11-31">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Arial, Helvetica, sans-serif"</span>,</span>
<span id="cb11-32">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span></span>
<span id="cb11-33">    ),</span>
<span id="cb11-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make the background transparent (also removes the text shadow)</span></span>
<span id="cb11-35">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">paper_bgcolor =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(0,0,0,0)"</span></span>
<span id="cb11-36">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">config</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">responsive =</span> T)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div class="plotly html-widget html-fill-item" id="htmlwidget-68aa8d05ae4f3df087c0" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-68aa8d05ae4f3df087c0">{"x":{"visdat":{"268e5658fa01":["function () ","plotlyVisDat"]},"cur_data":"268e5658fa01","attrs":{"268e5658fa01":{"orientation":"h","arrangement":"snap","node":{"label":["Eligible population","Invitation 1 No response","Invitation 1 Declined","Invitation 1 Accepted","Invitation 2 No response","Invitation 2 Accepted","Invitation 2 Declined","Invitation 3 Accepted","Invitation 3 Declined","Invitation 3 No response","Declined","Accepted","No response"],"color":["#7f8fa6","#7f8fa6","#c23616","#44bd32","#7f8fa6","#44bd32","#c23616","#44bd32","#c23616","#7f8fa6","#c23616","#44bd32","#7f8fa6"],"x":[0.001,0.22575000000000001,0.22575000000000001,0.22575000000000001,0.45050000000000001,0.45050000000000001,0.45050000000000001,0.67525000000000002,0.67525000000000002,0.67525000000000002,0.90000000000000002,0.90000000000000002,0.90000000000000002],"y":[0.53326666666666667,0.53326666666666667,0.999,0.001,0.53326666666666667,0.13406666666666667,0.90585333333333329,0.22721333333333335,0.82601333333333338,0.63972000000000007,0.93246666666666667,0.001,0.53326666666666667],"customdata":[null,"77.0%","15.0%","8.0%","46.0%","12.0%","8.0%","9.0%","10.0%","14.0%","33.0%","29.0%","38.0%"],"hovertemplate":"%{label}<br /><b>%{value}<\/b> participants<br /><b>%{customdata}<\/b> of eligible population"},"link":{"source":[0,0,0,1,1,1,2,3,1,4,4,4,5,6,4,7,8,9],"target":[2,1,3,4,5,6,10,11,12,7,8,9,11,10,12,11,10,12],"value":[15,77,8,46,12,8,15,8,11,9,10,14,12,8,13,9,10,14],"label":["15","77","8","46","12","8","15","8","11","9","10","14","12","8","13","9","10","14"],"color":["#C236164C","#7F8FA64C","#44BD324C","#7F8FA64C","#44BD324C","#C236164C","#C236164C","#44BD324C","#7F8FA64C","#44BD324C","#C236164C","#7F8FA64C","#44BD324C","#C236164C","#7F8FA64C","#44BD324C","#C236164C","#7F8FA64C"],"customdata":["15.0%","77.0%","8.0%","46.0%","12.0%","8.0%","15.0%","8.0%","11.0%","9.0%","10.0%","14.0%","12.0%","8.0%","13.0%","9.0%","10.0%","14.0%"],"hovertemplate":"%{source.label} ‚Üí %{target.label}<br /><b>%{value}<\/b> participants<br /><b>%{customdata}<\/b> of eligible population"},"alpha_stroke":1,"sizes":[10,100],"spans":[1,20],"type":"sankey"}},"layout":{"margin":{"b":40,"l":60,"t":25,"r":10},"font":{"family":"Arial, Helvetica, sans-serif","size":12},"paper_bgcolor":"rgba(0,0,0,0)","hovermode":"closest","showlegend":false},"source":"A","config":{"modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false,"responsive":true},"data":[{"orientation":"h","arrangement":"snap","node":{"label":["Eligible population","Invitation 1 No response","Invitation 1 Declined","Invitation 1 Accepted","Invitation 2 No response","Invitation 2 Accepted","Invitation 2 Declined","Invitation 3 Accepted","Invitation 3 Declined","Invitation 3 No response","Declined","Accepted","No response"],"color":["#7f8fa6","#7f8fa6","#c23616","#44bd32","#7f8fa6","#44bd32","#c23616","#44bd32","#c23616","#7f8fa6","#c23616","#44bd32","#7f8fa6"],"x":[0.001,0.22575000000000001,0.22575000000000001,0.22575000000000001,0.45050000000000001,0.45050000000000001,0.45050000000000001,0.67525000000000002,0.67525000000000002,0.67525000000000002,0.90000000000000002,0.90000000000000002,0.90000000000000002],"y":[0.53326666666666667,0.53326666666666667,0.999,0.001,0.53326666666666667,0.13406666666666667,0.90585333333333329,0.22721333333333335,0.82601333333333338,0.63972000000000007,0.93246666666666667,0.001,0.53326666666666667],"customdata":[null,"77.0%","15.0%","8.0%","46.0%","12.0%","8.0%","9.0%","10.0%","14.0%","33.0%","29.0%","38.0%"],"hovertemplate":"%{label}<br /><b>%{value}<\/b> participants<br /><b>%{customdata}<\/b> of eligible population"},"link":{"source":[0,0,0,1,1,1,2,3,1,4,4,4,5,6,4,7,8,9],"target":[2,1,3,4,5,6,10,11,12,7,8,9,11,10,12,11,10,12],"value":[15,77,8,46,12,8,15,8,11,9,10,14,12,8,13,9,10,14],"label":["15","77","8","46","12","8","15","8","11","9","10","14","12","8","13","9","10","14"],"color":["#C236164C","#7F8FA64C","#44BD324C","#7F8FA64C","#44BD324C","#C236164C","#C236164C","#44BD324C","#7F8FA64C","#44BD324C","#C236164C","#7F8FA64C","#44BD324C","#C236164C","#7F8FA64C","#44BD324C","#C236164C","#7F8FA64C"],"customdata":["15.0%","77.0%","8.0%","46.0%","12.0%","8.0%","15.0%","8.0%","11.0%","9.0%","10.0%","14.0%","12.0%","8.0%","13.0%","9.0%","10.0%","14.0%"],"hovertemplate":"%{source.label} ‚Üí %{target.label}<br /><b>%{value}<\/b> participants<br /><b>%{customdata}<\/b> of eligible population"},"type":"sankey","frame":null}],"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.20000000000000001,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
<p>A stylish Sankey</p>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>Creating Sankey plots in R using plotly is an effective way to visualise patient pathways.</p>
<p>In our project we embedded Sankey plots within an interactive <a href="https://shiny.posit.co/">Shiny</a> app which allows for selective filters that update the resulting plot. This allowed us to quickly compare the effects of different models of delivering the screening programme, geography, deprivation levels, patient demographic, or any combination of these.</p>
<p>Their use has helped the programme team better understand patient flows through the pathway, where the points of drop-off are and compare / contrast the effects of different models of delivering the screening programme on patient engagement.</p>
<p>Feedback from external stakeholders has been positive too, noting how easy it is to engage with and understand this style of presentation.</p>
<p>In this blog post we have wrangled a dataset to describe how people flow between steps in a process and then produced a Sankey diagram with some stylistic touches to make an effective visualisation.</p>
<p>I hope this post helps you feel better prepared to use Sankeys in your work.</p>


</section>


 ]]></description>
  <category>learning</category>
  <category>tutorial</category>
  <category>visualisation</category>
  <category>R</category>
  <guid>https://the-strategy-unit.github.io/data_science/blogs/posts/2024-02-28_sankey_plot/</guid>
  <pubDate>Wed, 28 Feb 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Nearest neighbour imputation</title>
  <dc:creator>Jacqueline Grout</dc:creator>
  <link>https://the-strategy-unit.github.io/data_science/blogs/posts/2024-01-17_nearest_neighbour/</link>
  <description><![CDATA[ 




<p>Recently I have been gathering data by GP practice, from a variety of different sources. The ultimate purpose of my project is to be able to report at an ICB/sub-ICB level<sup>1</sup>. The various datasets cover different timescales and consequently changes in GP practices over time have left me with mismatching datasets.</p>
<div class="no-row-height column-margin column-container"><div id="fn1"><p><sup>1</sup>&nbsp;An ICB (Integrated Care Board) is a statutory NHS organisation responsible for planning health services for their local populations</p></div></div><p>My approach has been to take as the basis of my project a recent GP List. Later in my project I want to perform calculations at a GP practice level based on an underlying health need and the data for this need is a CHD prevalence value from a dataset that is around 8 years old, and for which there is no update or alternative. From my recent list of 6454 practices, when I match to the need dataset, I am left with 151 practices without a value for need. If I remove these practices from the analysis then this could impact the analysis by sub-ICB since often a group of practices in the same area could be subject to changes, mergers and reorganisation.</p>
<p>Here‚Äôs the packages and some demo objects to work with to create an example for two practices:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Packages</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(sf)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidygeocoder)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(leaflet)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(viridisLite)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gt)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create some data with two practices with no need data</span></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># and a selection of practices locally with need data</span></span>
<span id="cb1-11">practices <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tribble</span>(</span>
<span id="cb1-12">  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>practice_code, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>postcode, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>has_orig_need, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>value,</span>
<span id="cb1-13">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CV1 4FS"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,</span>
<span id="cb1-14">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CV1 3GB"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.3</span>,</span>
<span id="cb1-15">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CV11 5TW"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.9</span>,</span>
<span id="cb1-16">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CV6 3HZ"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.1</span>,</span>
<span id="cb1-17">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CV6 1HS"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.7</span>,</span>
<span id="cb1-18">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P6"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CV6 5DF"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8.2</span>,</span>
<span id="cb1-19">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P7"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CV6 3FA"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.9</span>,</span>
<span id="cb1-20">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P8"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CV1 2DL"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.5</span>,</span>
<span id="cb1-21">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P9"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CV1 4JH"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.7</span>,</span>
<span id="cb1-22">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P10"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CV10 0GQ"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.5</span>,</span>
<span id="cb1-23">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P11"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CV10 0JH"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.8</span>,</span>
<span id="cb1-24">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P12"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CV11 5QT"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,</span>
<span id="cb1-25">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P13"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CV11 6AB"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.6</span>,</span>
<span id="cb1-26">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P14"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CV6 4DD"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.9</span></span>
<span id="cb1-27">)</span>
<span id="cb1-28"></span>
<span id="cb1-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get domain of numeric data</span></span>
<span id="cb1-30">(domain <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">range</span>(practices<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>has_orig_need))</span>
<span id="cb1-31"></span>
<span id="cb1-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make a colour palette</span></span>
<span id="cb1-33">pal <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colorNumeric</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">viridis</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">domain =</span> domain)</span></code></pre></div>
</details>
</div>
<p>To provide a suitable estimate of need for the newer practices without values, all the practices in the dataset were geocoded<sup>2</sup> using the <code>geocode</code> function from the {tidygeocoder} package.</p>
<div class="no-row-height column-margin column-container"><div id="fn2"><p><sup>2</sup>&nbsp;Geocoding is the process of converting addresses (often the postcode) into geographic coordinates (such as latitude and longitude) that can be plotted on a map.</p></div></div><div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">practices <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> practices <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row_number</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geocode</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">postalcode =</span> postcode) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_as_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">coords =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"long"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lat"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4326</span>)</span></code></pre></div>
</div>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">practices <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="mjxbabbkmw" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#mjxbabbkmw table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#mjxbabbkmw thead, #mjxbabbkmw tbody, #mjxbabbkmw tfoot, #mjxbabbkmw tr, #mjxbabbkmw td, #mjxbabbkmw th {
  border-style: none;
}

#mjxbabbkmw p {
  margin: 0;
  padding: 0;
}

#mjxbabbkmw .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#mjxbabbkmw .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#mjxbabbkmw .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#mjxbabbkmw .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#mjxbabbkmw .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#mjxbabbkmw .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#mjxbabbkmw .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#mjxbabbkmw .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#mjxbabbkmw .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#mjxbabbkmw .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#mjxbabbkmw .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#mjxbabbkmw .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#mjxbabbkmw .gt_spanner_row {
  border-bottom-style: hidden;
}

#mjxbabbkmw .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#mjxbabbkmw .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#mjxbabbkmw .gt_from_md > :first-child {
  margin-top: 0;
}

#mjxbabbkmw .gt_from_md > :last-child {
  margin-bottom: 0;
}

#mjxbabbkmw .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#mjxbabbkmw .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#mjxbabbkmw .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#mjxbabbkmw .gt_row_group_first td {
  border-top-width: 2px;
}

#mjxbabbkmw .gt_row_group_first th {
  border-top-width: 2px;
}

#mjxbabbkmw .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#mjxbabbkmw .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#mjxbabbkmw .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#mjxbabbkmw .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#mjxbabbkmw .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#mjxbabbkmw .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#mjxbabbkmw .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#mjxbabbkmw .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#mjxbabbkmw .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#mjxbabbkmw .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#mjxbabbkmw .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#mjxbabbkmw .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#mjxbabbkmw .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#mjxbabbkmw .gt_left {
  text-align: left;
}

#mjxbabbkmw .gt_center {
  text-align: center;
}

#mjxbabbkmw .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#mjxbabbkmw .gt_font_normal {
  font-weight: normal;
}

#mjxbabbkmw .gt_font_bold {
  font-weight: bold;
}

#mjxbabbkmw .gt_font_italic {
  font-style: italic;
}

#mjxbabbkmw .gt_super {
  font-size: 65%;
}

#mjxbabbkmw .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#mjxbabbkmw .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#mjxbabbkmw .gt_indent_1 {
  text-indent: 5px;
}

#mjxbabbkmw .gt_indent_2 {
  text-indent: 10px;
}

#mjxbabbkmw .gt_indent_3 {
  text-indent: 15px;
}

#mjxbabbkmw .gt_indent_4 {
  text-indent: 20px;
}

#mjxbabbkmw .gt_indent_5 {
  text-indent: 25px;
}

#mjxbabbkmw .katex-display {
  display: inline-flex !important;
  margin-bottom: 0.75em !important;
}

#mjxbabbkmw div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {
  height: 0px !important;
}
</style>

<table class="gt_table caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="header gt_col_headings">
<th id="practice_code" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">practice_code</th>
<th id="postcode" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">postcode</th>
<th id="has_orig_need" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">has_orig_need</th>
<th id="value" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">value</th>
<th id="id" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">id</th>
<th id="geometry" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">geometry</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" headers="practice_code">P1</td>
<td class="gt_row gt_left" headers="postcode">CV1 4FS</td>
<td class="gt_row gt_right" headers="has_orig_need">0</td>
<td class="gt_row gt_right" headers="value">NA</td>
<td class="gt_row gt_right" headers="id">1</td>
<td class="gt_row gt_center" headers="geometry">c(-1.50672203333333, 52.4140662333333)</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="practice_code">P2</td>
<td class="gt_row gt_left" headers="postcode">CV1 3GB</td>
<td class="gt_row gt_right" headers="has_orig_need">1</td>
<td class="gt_row gt_right" headers="value">7.3</td>
<td class="gt_row gt_right" headers="id">2</td>
<td class="gt_row gt_center" headers="geometry">c(-1.51888, 52.4034199)</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="practice_code">P3</td>
<td class="gt_row gt_left" headers="postcode">CV11 5TW</td>
<td class="gt_row gt_right" headers="has_orig_need">1</td>
<td class="gt_row gt_right" headers="value">6.9</td>
<td class="gt_row gt_right" headers="id">3</td>
<td class="gt_row gt_center" headers="geometry">c(-1.46746, 52.519)</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="practice_code">P4</td>
<td class="gt_row gt_left" headers="postcode">CV6 3HZ</td>
<td class="gt_row gt_right" headers="has_orig_need">1</td>
<td class="gt_row gt_right" headers="value">7.1</td>
<td class="gt_row gt_right" headers="id">4</td>
<td class="gt_row gt_center" headers="geometry">c(-1.52231, 52.42367)</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="practice_code">P5</td>
<td class="gt_row gt_left" headers="postcode">CV6 1HS</td>
<td class="gt_row gt_right" headers="has_orig_need">1</td>
<td class="gt_row gt_right" headers="value">7.7</td>
<td class="gt_row gt_right" headers="id">5</td>
<td class="gt_row gt_center" headers="geometry">c(-1.52542, 52.41989)</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="practice_code">P6</td>
<td class="gt_row gt_left" headers="postcode">CV6 5DF</td>
<td class="gt_row gt_right" headers="has_orig_need">1</td>
<td class="gt_row gt_right" headers="value">8.2</td>
<td class="gt_row gt_right" headers="id">6</td>
<td class="gt_row gt_center" headers="geometry">c(-1.498344825, 52.4250186)</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="practice_code">P7</td>
<td class="gt_row gt_left" headers="postcode">CV6 3FA</td>
<td class="gt_row gt_right" headers="has_orig_need">1</td>
<td class="gt_row gt_right" headers="value">7.9</td>
<td class="gt_row gt_right" headers="id">7</td>
<td class="gt_row gt_center" headers="geometry">c(-1.51787, 52.43135)</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="practice_code">P8</td>
<td class="gt_row gt_left" headers="postcode">CV1 2DL</td>
<td class="gt_row gt_right" headers="has_orig_need">1</td>
<td class="gt_row gt_right" headers="value">7.5</td>
<td class="gt_row gt_right" headers="id">8</td>
<td class="gt_row gt_center" headers="geometry">c(-1.49105, 52.40582)</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="practice_code">P9</td>
<td class="gt_row gt_left" headers="postcode">CV1 4JH</td>
<td class="gt_row gt_right" headers="has_orig_need">1</td>
<td class="gt_row gt_right" headers="value">7.7</td>
<td class="gt_row gt_right" headers="id">9</td>
<td class="gt_row gt_center" headers="geometry">c(-1.5069566, 52.4191685)</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="practice_code">P10</td>
<td class="gt_row gt_left" headers="postcode">CV10 0GQ</td>
<td class="gt_row gt_right" headers="has_orig_need">1</td>
<td class="gt_row gt_right" headers="value">7.5</td>
<td class="gt_row gt_right" headers="id">10</td>
<td class="gt_row gt_center" headers="geometry">c(-1.52197, 52.54074)</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="practice_code">P11</td>
<td class="gt_row gt_left" headers="postcode">CV10 0JH</td>
<td class="gt_row gt_right" headers="has_orig_need">1</td>
<td class="gt_row gt_right" headers="value">7.8</td>
<td class="gt_row gt_right" headers="id">11</td>
<td class="gt_row gt_center" headers="geometry">c(-1.5163199, 52.53723)</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="practice_code">P12</td>
<td class="gt_row gt_left" headers="postcode">CV11 5QT</td>
<td class="gt_row gt_right" headers="has_orig_need">0</td>
<td class="gt_row gt_right" headers="value">NA</td>
<td class="gt_row gt_right" headers="id">12</td>
<td class="gt_row gt_center" headers="geometry">c(-1.46927, 52.51899)</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="practice_code">P13</td>
<td class="gt_row gt_left" headers="postcode">CV11 6AB</td>
<td class="gt_row gt_right" headers="has_orig_need">1</td>
<td class="gt_row gt_right" headers="value">7.6</td>
<td class="gt_row gt_right" headers="id">13</td>
<td class="gt_row gt_center" headers="geometry">c(-1.45822, 52.52682)</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="practice_code">P14</td>
<td class="gt_row gt_left" headers="postcode">CV6 4DD</td>
<td class="gt_row gt_right" headers="has_orig_need">1</td>
<td class="gt_row gt_right" headers="value">7.9</td>
<td class="gt_row gt_right" headers="id">14</td>
<td class="gt_row gt_center" headers="geometry">c(-1.50832, 52.44104)</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>This map shows the practices, purple are the practices with no need data and yellow are practices with need data available.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make map to display practices</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">leaflet</span>(practices) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addTiles</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addCircleMarkers</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pal</span>(has_orig_need))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div class="leaflet html-widget html-fill-item" id="htmlwidget-868cca0bb315268ef3a7" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-868cca0bb315268ef3a7">{"x":{"options":{"crs":{"crsClass":"L.CRS.EPSG3857","code":null,"proj4def":null,"projectedBounds":null,"options":{}}},"calls":[{"method":"addTiles","args":["https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",null,null,{"minZoom":0,"maxZoom":18,"tileSize":256,"subdomains":"abc","errorTileUrl":"","tms":false,"noWrap":false,"zoomOffset":0,"zoomReverse":false,"opacity":1,"zIndex":1,"detectRetina":false,"attribution":"&copy; <a href=\"https://openstreetmap.org/copyright/\">OpenStreetMap<\/a>,  <a href=\"https://opendatacommons.org/licenses/odbl/\">ODbL<\/a>"}]},{"method":"addCircleMarkers","args":[[52.41406623333333,52.4034199,52.519,52.42367,52.41989,52.4250186,52.43135,52.40582,52.4191685,52.54074,52.53723,52.51899,52.52682,52.44104],[-1.506722033333333,-1.51888,-1.46746,-1.52231,-1.52542,-1.498344825,-1.51787,-1.49105,-1.5069566,-1.52197,-1.5163199,-1.46927,-1.45822,-1.50832],10,null,null,{"interactive":true,"className":"","stroke":true,"color":["#440154","#FDE725","#FDE725","#FDE725","#FDE725","#FDE725","#FDE725","#FDE725","#FDE725","#FDE725","#FDE725","#440154","#FDE725","#FDE725"],"weight":5,"opacity":0.5,"fill":true,"fillColor":["#440154","#FDE725","#FDE725","#FDE725","#FDE725","#FDE725","#FDE725","#FDE725","#FDE725","#FDE725","#FDE725","#440154","#FDE725","#FDE725"],"fillOpacity":0.2},null,null,null,null,null,{"interactive":false,"permanent":false,"direction":"auto","opacity":1,"offset":[0,0],"textsize":"10px","textOnly":false,"className":"","sticky":true},null]}],"limits":{"lat":[52.4034199,52.54074],"lng":[-1.52542,-1.45822]}},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>The data was split into those with, and without, a value for need. Using <code>st_join</code> from the {sf} package to join those without, and those with, a value for need, using the geometry to find all those within 1500m (1.5km).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">no_need <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> practices <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(has_orig_need <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb5-3"></span>
<span id="cb5-4">with_need <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> practices <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(has_orig_need <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-6"></span>
<span id="cb5-7"></span>
<span id="cb5-8">neighbours <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> no_need <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">no_need_postcode =</span> postcode, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">no_need_prac_code =</span> practice_code) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_join</span>(with_need, st_is_within_distance, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1500</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_drop_geometry</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(id, no_need_postcode, no_need_prac_code) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inner_join</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> with_need, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">join_by</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>))</span></code></pre></div>
</div>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">leaflet</span>(neighbours) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addTiles</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addCircleMarkers</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"purple"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addMarkers</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.50686326666667</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">52.4141089666667</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">popup =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Practice with no data"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addCircles</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.50686326666667</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">52.4141089666667</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">radius =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1500</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addMarkers</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.46927</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">52.51899</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">popup =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Practice with no data"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addCircles</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.46927</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">52.51899</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">radius =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1500</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div class="leaflet html-widget html-fill-item" id="htmlwidget-b54769d07579f0cf073b" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-b54769d07579f0cf073b">{"x":{"options":{"crs":{"crsClass":"L.CRS.EPSG3857","code":null,"proj4def":null,"projectedBounds":null,"options":{}}},"calls":[{"method":"addTiles","args":["https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",null,null,{"minZoom":0,"maxZoom":18,"tileSize":256,"subdomains":"abc","errorTileUrl":"","tms":false,"noWrap":false,"zoomOffset":0,"zoomReverse":false,"opacity":1,"zIndex":1,"detectRetina":false,"attribution":"&copy; <a href=\"https://openstreetmap.org/copyright/\">OpenStreetMap<\/a>,  <a href=\"https://opendatacommons.org/licenses/odbl/\">ODbL<\/a>"}]},{"method":"addCircleMarkers","args":[[52.4034199,52.519,52.41989,52.4250186,52.40582,52.4191685,52.52682],[-1.51888,-1.46746,-1.52542,-1.498344825,-1.49105,-1.5069566,-1.45822],10,null,null,{"interactive":true,"className":"","stroke":true,"color":"purple","weight":5,"opacity":0.5,"fill":true,"fillColor":"purple","fillOpacity":0.2},null,null,null,null,null,{"interactive":false,"permanent":false,"direction":"auto","opacity":1,"offset":[0,0],"textsize":"10px","textOnly":false,"className":"","sticky":true},null]},{"method":"addMarkers","args":[52.4141089666667,-1.50686326666667,null,null,null,{"interactive":true,"draggable":false,"keyboard":true,"title":"","alt":"","zIndexOffset":0,"opacity":1,"riseOnHover":false,"riseOffset":250},"Practice with no data",null,null,null,null,{"interactive":false,"permanent":false,"direction":"auto","opacity":1,"offset":[0,0],"textsize":"10px","textOnly":false,"className":"","sticky":true},null]},{"method":"addCircles","args":[52.4141089666667,-1.50686326666667,1500,null,null,{"interactive":true,"className":"","stroke":true,"color":"#03F","weight":5,"opacity":0.5,"fill":true,"fillColor":"#03F","fillOpacity":0.2},null,null,null,{"interactive":false,"permanent":false,"direction":"auto","opacity":1,"offset":[0,0],"textsize":"10px","textOnly":false,"className":"","sticky":true},null,null]},{"method":"addMarkers","args":[52.51899,-1.46927,null,null,null,{"interactive":true,"draggable":false,"keyboard":true,"title":"","alt":"","zIndexOffset":0,"opacity":1,"riseOnHover":false,"riseOffset":250},"Practice with no data",null,null,null,null,{"interactive":false,"permanent":false,"direction":"auto","opacity":1,"offset":[0,0],"textsize":"10px","textOnly":false,"className":"","sticky":true},null]},{"method":"addCircles","args":[52.51899,-1.46927,1500,null,null,{"interactive":true,"className":"","stroke":true,"color":"#03F","weight":5,"opacity":0.5,"fill":true,"fillColor":"#03F","fillOpacity":0.2},null,null,null,{"interactive":false,"permanent":false,"direction":"auto","opacity":1,"offset":[0,0],"textsize":"10px","textOnly":false,"className":"","sticky":true},null,null]}],"limits":{"lat":[52.4034199,52.52682],"lng":[-1.52542,-1.45822]}},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>The data for the ‚Äúneighbours‚Äù was grouped by the practice code of those without need data and a mean value was calculated for each practice to generate an estimated value.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">neighbours_estimate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> neighbours <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(no_need_prac_code) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">need_est =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_drop_geometry</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(no_need_prac_code, need_est))</span></code></pre></div>
</div>
<p>The original data was joined back to the ‚Äúneighbours‚Äù.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">practices_with_neighbours_estimate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> practices <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(neighbours_estimate, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">join_by</span>(practice_code <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> no_need_prac_code)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_drop_geometry</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(practice_code, need_est))</span></code></pre></div>
</div>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">practices_with_neighbours_estimate <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>has_orig_need, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="gmkltvgoth" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#gmkltvgoth table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#gmkltvgoth thead, #gmkltvgoth tbody, #gmkltvgoth tfoot, #gmkltvgoth tr, #gmkltvgoth td, #gmkltvgoth th {
  border-style: none;
}

#gmkltvgoth p {
  margin: 0;
  padding: 0;
}

#gmkltvgoth .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#gmkltvgoth .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#gmkltvgoth .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#gmkltvgoth .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#gmkltvgoth .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#gmkltvgoth .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#gmkltvgoth .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#gmkltvgoth .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#gmkltvgoth .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#gmkltvgoth .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#gmkltvgoth .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#gmkltvgoth .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#gmkltvgoth .gt_spanner_row {
  border-bottom-style: hidden;
}

#gmkltvgoth .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#gmkltvgoth .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#gmkltvgoth .gt_from_md > :first-child {
  margin-top: 0;
}

#gmkltvgoth .gt_from_md > :last-child {
  margin-bottom: 0;
}

#gmkltvgoth .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#gmkltvgoth .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#gmkltvgoth .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#gmkltvgoth .gt_row_group_first td {
  border-top-width: 2px;
}

#gmkltvgoth .gt_row_group_first th {
  border-top-width: 2px;
}

#gmkltvgoth .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#gmkltvgoth .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#gmkltvgoth .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#gmkltvgoth .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#gmkltvgoth .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#gmkltvgoth .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#gmkltvgoth .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#gmkltvgoth .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#gmkltvgoth .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#gmkltvgoth .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#gmkltvgoth .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#gmkltvgoth .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#gmkltvgoth .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#gmkltvgoth .gt_left {
  text-align: left;
}

#gmkltvgoth .gt_center {
  text-align: center;
}

#gmkltvgoth .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#gmkltvgoth .gt_font_normal {
  font-weight: normal;
}

#gmkltvgoth .gt_font_bold {
  font-weight: bold;
}

#gmkltvgoth .gt_font_italic {
  font-style: italic;
}

#gmkltvgoth .gt_super {
  font-size: 65%;
}

#gmkltvgoth .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#gmkltvgoth .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#gmkltvgoth .gt_indent_1 {
  text-indent: 5px;
}

#gmkltvgoth .gt_indent_2 {
  text-indent: 10px;
}

#gmkltvgoth .gt_indent_3 {
  text-indent: 15px;
}

#gmkltvgoth .gt_indent_4 {
  text-indent: 20px;
}

#gmkltvgoth .gt_indent_5 {
  text-indent: 25px;
}

#gmkltvgoth .katex-display {
  display: inline-flex !important;
  margin-bottom: 0.75em !important;
}

#gmkltvgoth div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {
  height: 0px !important;
}
</style>

<table class="gt_table caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="header gt_col_headings">
<th id="practice_code" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">practice_code</th>
<th id="postcode" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">postcode</th>
<th id="value" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">value</th>
<th id="need_est" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">need_est</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" headers="practice_code">P1</td>
<td class="gt_row gt_left" headers="postcode">CV1 4FS</td>
<td class="gt_row gt_right" headers="value">NA</td>
<td class="gt_row gt_right" headers="need_est">7.68</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="practice_code">P2</td>
<td class="gt_row gt_left" headers="postcode">CV1 3GB</td>
<td class="gt_row gt_right" headers="value">7.3</td>
<td class="gt_row gt_right" headers="need_est">NA</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="practice_code">P3</td>
<td class="gt_row gt_left" headers="postcode">CV11 5TW</td>
<td class="gt_row gt_right" headers="value">6.9</td>
<td class="gt_row gt_right" headers="need_est">NA</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="practice_code">P4</td>
<td class="gt_row gt_left" headers="postcode">CV6 3HZ</td>
<td class="gt_row gt_right" headers="value">7.1</td>
<td class="gt_row gt_right" headers="need_est">NA</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="practice_code">P5</td>
<td class="gt_row gt_left" headers="postcode">CV6 1HS</td>
<td class="gt_row gt_right" headers="value">7.7</td>
<td class="gt_row gt_right" headers="need_est">NA</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="practice_code">P6</td>
<td class="gt_row gt_left" headers="postcode">CV6 5DF</td>
<td class="gt_row gt_right" headers="value">8.2</td>
<td class="gt_row gt_right" headers="need_est">NA</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="practice_code">P7</td>
<td class="gt_row gt_left" headers="postcode">CV6 3FA</td>
<td class="gt_row gt_right" headers="value">7.9</td>
<td class="gt_row gt_right" headers="need_est">NA</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="practice_code">P8</td>
<td class="gt_row gt_left" headers="postcode">CV1 2DL</td>
<td class="gt_row gt_right" headers="value">7.5</td>
<td class="gt_row gt_right" headers="need_est">NA</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="practice_code">P9</td>
<td class="gt_row gt_left" headers="postcode">CV1 4JH</td>
<td class="gt_row gt_right" headers="value">7.7</td>
<td class="gt_row gt_right" headers="need_est">NA</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="practice_code">P10</td>
<td class="gt_row gt_left" headers="postcode">CV10 0GQ</td>
<td class="gt_row gt_right" headers="value">7.5</td>
<td class="gt_row gt_right" headers="need_est">NA</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="practice_code">P11</td>
<td class="gt_row gt_left" headers="postcode">CV10 0JH</td>
<td class="gt_row gt_right" headers="value">7.8</td>
<td class="gt_row gt_right" headers="need_est">NA</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="practice_code">P12</td>
<td class="gt_row gt_left" headers="postcode">CV11 5QT</td>
<td class="gt_row gt_right" headers="value">NA</td>
<td class="gt_row gt_right" headers="need_est">7.25</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="practice_code">P13</td>
<td class="gt_row gt_left" headers="postcode">CV11 6AB</td>
<td class="gt_row gt_right" headers="value">7.6</td>
<td class="gt_row gt_right" headers="need_est">NA</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="practice_code">P14</td>
<td class="gt_row gt_left" headers="postcode">CV6 4DD</td>
<td class="gt_row gt_right" headers="value">7.9</td>
<td class="gt_row gt_right" headers="need_est">NA</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>Finally, an updated data frame was created of the need data using the actual need for the practice where available, otherwise using estimated need.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">practices_with_neighbours_estimate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> practices_with_neighbours_estimate <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">need_to_use =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(value <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> value,</span>
<span id="cb10-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.default =</span> need_est</span>
<span id="cb10-4">  )) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(practice_code, need_to_use)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="vhjqvzqphv" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#vhjqvzqphv table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#vhjqvzqphv thead, #vhjqvzqphv tbody, #vhjqvzqphv tfoot, #vhjqvzqphv tr, #vhjqvzqphv td, #vhjqvzqphv th {
  border-style: none;
}

#vhjqvzqphv p {
  margin: 0;
  padding: 0;
}

#vhjqvzqphv .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#vhjqvzqphv .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#vhjqvzqphv .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#vhjqvzqphv .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#vhjqvzqphv .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#vhjqvzqphv .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#vhjqvzqphv .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#vhjqvzqphv .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#vhjqvzqphv .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#vhjqvzqphv .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#vhjqvzqphv .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#vhjqvzqphv .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#vhjqvzqphv .gt_spanner_row {
  border-bottom-style: hidden;
}

#vhjqvzqphv .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#vhjqvzqphv .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#vhjqvzqphv .gt_from_md > :first-child {
  margin-top: 0;
}

#vhjqvzqphv .gt_from_md > :last-child {
  margin-bottom: 0;
}

#vhjqvzqphv .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#vhjqvzqphv .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#vhjqvzqphv .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#vhjqvzqphv .gt_row_group_first td {
  border-top-width: 2px;
}

#vhjqvzqphv .gt_row_group_first th {
  border-top-width: 2px;
}

#vhjqvzqphv .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#vhjqvzqphv .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#vhjqvzqphv .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#vhjqvzqphv .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#vhjqvzqphv .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#vhjqvzqphv .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#vhjqvzqphv .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#vhjqvzqphv .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#vhjqvzqphv .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#vhjqvzqphv .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#vhjqvzqphv .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#vhjqvzqphv .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#vhjqvzqphv .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#vhjqvzqphv .gt_left {
  text-align: left;
}

#vhjqvzqphv .gt_center {
  text-align: center;
}

#vhjqvzqphv .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#vhjqvzqphv .gt_font_normal {
  font-weight: normal;
}

#vhjqvzqphv .gt_font_bold {
  font-weight: bold;
}

#vhjqvzqphv .gt_font_italic {
  font-style: italic;
}

#vhjqvzqphv .gt_super {
  font-size: 65%;
}

#vhjqvzqphv .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#vhjqvzqphv .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#vhjqvzqphv .gt_indent_1 {
  text-indent: 5px;
}

#vhjqvzqphv .gt_indent_2 {
  text-indent: 10px;
}

#vhjqvzqphv .gt_indent_3 {
  text-indent: 15px;
}

#vhjqvzqphv .gt_indent_4 {
  text-indent: 20px;
}

#vhjqvzqphv .gt_indent_5 {
  text-indent: 25px;
}

#vhjqvzqphv .katex-display {
  display: inline-flex !important;
  margin-bottom: 0.75em !important;
}

#vhjqvzqphv div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {
  height: 0px !important;
}
</style>

<table class="gt_table caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="header gt_col_headings">
<th id="practice_code" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">practice_code</th>
<th id="need_to_use" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">need_to_use</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" headers="practice_code">P1</td>
<td class="gt_row gt_right" headers="need_to_use">7.68</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="practice_code">P2</td>
<td class="gt_row gt_right" headers="need_to_use">7.30</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="practice_code">P3</td>
<td class="gt_row gt_right" headers="need_to_use">6.90</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="practice_code">P4</td>
<td class="gt_row gt_right" headers="need_to_use">7.10</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="practice_code">P5</td>
<td class="gt_row gt_right" headers="need_to_use">7.70</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="practice_code">P6</td>
<td class="gt_row gt_right" headers="need_to_use">8.20</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="practice_code">P7</td>
<td class="gt_row gt_right" headers="need_to_use">7.90</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="practice_code">P8</td>
<td class="gt_row gt_right" headers="need_to_use">7.50</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="practice_code">P9</td>
<td class="gt_row gt_right" headers="need_to_use">7.70</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="practice_code">P10</td>
<td class="gt_row gt_right" headers="need_to_use">7.50</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="practice_code">P11</td>
<td class="gt_row gt_right" headers="need_to_use">7.80</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="practice_code">P12</td>
<td class="gt_row gt_right" headers="need_to_use">7.25</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="practice_code">P13</td>
<td class="gt_row gt_right" headers="need_to_use">7.60</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="practice_code">P14</td>
<td class="gt_row gt_right" headers="need_to_use">7.90</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>For my project, this method has successfully generated a prevalence for 125 of the 151 practices without a need value, leaving just 26 practices without a need. This is using a 1.5 km radius. In each use case there will be a decision to make regarding a more accurate estimate (smaller radius) and therefore fewer matches versus a less accurate estimate (using a larger radius) and therefore more matches.</p>
<p>This approach could be replicated for other similar uses/purposes. A topical example from an SU project is the need to assign population prevalence for hypertension and compare it to current QOF<sup>3</sup> data. Again, the prevalence data is a few years old so we have to move the historical data to fit with current practices and this leaves missing data that can be estimated using this method.</p>


<div class="no-row-height column-margin column-container"><div id="fn3"><p><sup>3</sup>&nbsp;QOF (Quality and Outcomes Framework) is a voluntary annual reward and incentive programme for all GP practices in England, detailing practice achievement results.</p></div></div>

 ]]></description>
  <category>learning</category>
  <guid>https://the-strategy-unit.github.io/data_science/blogs/posts/2024-01-17_nearest_neighbour/</guid>
  <pubDate>Wed, 17 Jan 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Advent of Code and Test Driven Development</title>
  <dc:creator>YiWen Hon</dc:creator>
  <link>https://the-strategy-unit.github.io/data_science/blogs/posts/2024-01-10_advent-of-code-and-test-driven-development/</link>
  <description><![CDATA[ 




<p><a href="https://adventofcode.com/">Advent of Code</a> is an annual event, where daily coding puzzles are released from 1st ‚Äì 24th December. We ran one of our fortnightly Coffee &amp; Coding sessions introducing Advent of Code to people who code in the Strategy Unit, as well as the concept of test-driven development as a potential way of approaching the puzzles.</p>
<p><a href="https://developer.ibm.com/articles/5-steps-of-test-driven-development/">Test-driven development</a> (TDD) is an approach to coding which involves writing the test for a function BEFORE we write the function. This might seem quite counterintuitive, but it makes it easier to identify bugs üêõ when they are introduced to our code, and ensures that our functions meet all necessary criteria. From my experience, this takes quite a long time to implement and can be quite tedious, but it is definitely worth it overall, especially as your project develops. Testing is also recommended in the <a href="https://nhsdigital.github.io/rap-community-of-practice/introduction_to_RAP/levels_of_RAP/">NHS Reproducible Analytical Pipeline (RAP)</a> guidelines.</p>
<p>An interesting thing to note about TDD is that we‚Äôre always expecting our first test to fail, and indeed failing tests are useful and important! If we wrote tests that just passed all the time, this would not be useful at all for our code.</p>
<p>The way that Advent of Code is structured, with test data for each puzzle and an expected test result, makes it very amenable to a test-driven approach. In order to support this, Matt and I created template repositories for a test-driven approach to Advent of Code, in <a href="https://github.com/yiwen-h/aoc_python_template">Python</a> and in <a href="https://github.com/matt-dray/aoc.rstats.template">R</a>.</p>
<p>Our goal when setting this up was to introduce others in the Strategy Unit to both TDD and Advent of Code. Advent of code can be challenging and I personally struggle to get past the first week, but it encourages creative (and maybe even fun?!) approaches to coding problems. I‚Äôm glad that we had the chance to explore some of the puzzles together in Coffee &amp; Coding ‚Äì it was interesting to see so many different approaches to the same problem, and hopefully it also gave us all the chance to practice writing tests.</p>



 ]]></description>
  <category>learning</category>
  <guid>https://the-strategy-unit.github.io/data_science/blogs/posts/2024-01-10_advent-of-code-and-test-driven-development/</guid>
  <pubDate>Wed, 10 Jan 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Alternative remote repositories</title>
  <dc:creator>Tom Jemmett</dc:creator>
  <link>https://the-strategy-unit.github.io/data_science/blogs/posts/2023-04-26_alternative_remotes/</link>
  <description><![CDATA[ 




<p>It‚Äôs great when someone send‚Äôs you a pull request on GitHub to fix bugs or add new features to your project, but you probably always want to check the other persons work in someway before merging that pull request.</p>
<p>All of the steps below are intended to be entered via a terminal.</p>
<p>Let‚Äôs imagine that we have a GitHub account called example and a repository called test, and we use https rather than ssh.</p>
<pre><code>$ git remote get-url origin
# https://github.com/example/test.git</code></pre>
<p>Now, let‚Äôs say we have someone who has submitted a Pull Request (PR), and their username is friend. We can add a new remote for their fork with</p>
<pre><code>$ git remote add friend https://github.com/friend/test.git</code></pre>
<p>Here, I name the remote exactly as per the persons GitHub username for no other reason than making it easier to track things later on. You could name this remote whatever you like, but you will need to make sure that the remote url matches their repository correctly.</p>
<p>We are now able to checkout their remote branch. First, we will want to fetch their work:</p>
<pre><code># make sure to replace the remote name to what you set it to before
$ git fetch friend</code></pre>
<p>Now, hopefully they have commited to a branch with a name that you haven‚Äôt used. Let‚Äôs say they created a branch called <code>my_work</code>. You can then simply run</p>
<pre><code>$ git switch friend/my_work</code></pre>
<p>This should checkout the <code>my_work</code> branch locally for you.</p>
<p>Now, if they have happened to use a branch name that you are already using, or more likely, directly commited to their own <code>main</code> branch, you will need to do checkout to a new branch:</p>
<pre><code># replace friend as above to be the name of the remote, and main to be the branch
# that they have used
# replace their_work with whatever you want to call this branch locally
$ git checkout friend/main -b their_work</code></pre>
<p>You are now ready to run their code and check everything is good to merge!</p>
<p>Finally, If you want to clean up your local repository you can remove the new branch that you checked out and the new remote with the following steps:</p>
<pre><code># switch back to one of your branches, e.g. main
$ git checkout main

# then remove the branch that you created above
$ git branch -D their_work

# you can remove the remote
$ git remote remove friend</code></pre>



 ]]></description>
  <category>git</category>
  <category>tutorial</category>
  <guid>https://the-strategy-unit.github.io/data_science/blogs/posts/2023-04-26_alternative_remotes/</guid>
  <pubDate>Wed, 26 Apr 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Reinstalling R Packages</title>
  <dc:creator>Tom Jemmett</dc:creator>
  <link>https://the-strategy-unit.github.io/data_science/blogs/posts/2023-04-26_reinstalling-r-packages/</link>
  <description><![CDATA[ 




<p><a href="https://stat.ethz.ch/pipermail/r-announce/2023/000691.html">R 4.3.0 was released</a> last week. Anytime you update R you will probably find yourself in the position where no packages are installed. This is by design - the packages that you have installed may need to be updated and recompiled to work under new versions of R.</p>
<p>You may find yourself wanting to have all of the packages that you previously used, so one approach that some people take is to copy the previous library folder to the new versions folder. This isn‚Äôt a good idea and could potentially break your R install.</p>
<p>Another approach would be to export the list of packages in R before updating and then using that list after you have updated R. This can cause issues though if you install from places other than CRAN, e.g.&nbsp;bioconductor, or from GitHub.</p>
<p>Some of these approaches are discussed on the <a href="https://community.rstudio.com/t/reinstalling-packages-on-new-version-of-r/7670/4">RStudio Community Forum</a>. But I prefer an approach of having a ‚Äúspring clean‚Äù, instead only installing the packages that I know that I need.</p>
<p>I maintain a <a href="https://gist.github.com/tomjemmett/c105d3e0fbea7558088f68c65e68e1ed/">list of the packages that I used</a> as a gist. Using this, I can then simply run this script on any new R install. In fact, if you click the ‚Äúraw‚Äù button on the gist, and copy that url, you can simply run</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://gist.githubusercontent.com/tomjemmett/c105d3e0fbea7558088f68c65e68e1ed/raw/a1db4b5fa0d24562d16d3f57fe8c25fb0d8aa53e/setup.R"</span>)</span></code></pre></div>
<p>Generally, sourcing a url is a bad idea - the reason for this is if it‚Äôs not a link that you control, then someone could update the contents and run arbritary code on your machine. In this case, I‚Äôm happy to run this as it‚Äôs my own gist, but you should be mindful if running it yourself!</p>
<p>If you look at the script I first install a number of packages from CRAN, then I install packages that only exist on GitHub.</p>



 ]]></description>
  <category>git</category>
  <category>tutorial</category>
  <guid>https://the-strategy-unit.github.io/data_science/blogs/posts/2023-04-26_reinstalling-r-packages/</guid>
  <pubDate>Wed, 26 Apr 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Creating a hotfix with git</title>
  <dc:creator>Tom Jemmett</dc:creator>
  <link>https://the-strategy-unit.github.io/data_science/blogs/posts/2023-03-24_hotfix-with-git/</link>
  <description><![CDATA[ 




<p>I recently discovered a bug in a code-base which needed to be fixed and deployed back to production A.S.A.P., but since the last release the code has moved on significantly. The history looks something a bit like:</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://the-strategy-unit.github.io/data_science/blogs/posts/2023-03-24_hotfix-with-git/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>That is, we have a tag which is the code that is currently in production (which we need to patch), a number of commits after that tag to main (which were separate branches merged via pull requests), and a current development branch.</p>
<p>I need to somehow: 1. go back to the tagged release, 2. check that code out, 3. patch that code, 4. commit this change, but insert the commit before all of the new commits after the tag</p>
<p>There are at least two ways that I know to do this, one would be with an <a href="https://about.gitlab.com/blog/2020/11/23/keep-git-history-clean-with-interactive-rebase/">interactive rebase</a>, but I used a slightly longer method, but one I feel is a little less likely to get wrong.</p>
<p>Below are the step‚Äôs that I took. One thing I should note is this worked well for my particular issue because the change didn‚Äôt cause any merge conflicts later on.</p>
<section id="fixing-my-codebase" class="level2">
<h2 class="anchored" data-anchor-id="fixing-my-codebase">Fixing my codebase</h2>
<p>First, we need to checkout the tag</p>
<pre><code>git checkout -b hotfix v0.2.0</code></pre>
<p>This creates a new branch called <code>hotfix</code> off of the tag <code>v0.2.0</code>.</p>
<p>Now that I have the code base checked out at the point I need to fix, I can make the change that is needed, and commit the change</p>
<pre><code>git add [FILENAME]
git commit -m "fixes the code"</code></pre>
<p><em>(Obviously, I used the actual file name and gave a better commit message. I Promise üòù)</em></p>
<p>Now my code is fixed, I create a new tag for this ‚Äúrelease‚Äù, as well as push the code to production (this step is omitted here)</p>
<pre><code>git tag v0.2.1 -m "version 0.2.0"</code></pre>
<p>At this point, our history looks something like</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://the-strategy-unit.github.io/data_science/blogs/posts/2023-03-24_hotfix-with-git/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>What we want to do is break the link between main and <code>v0.2.0</code>, instead attaching to<code>v0.2.1</code>. First though, I want to make sure that if I make a mistake, I‚Äôm not making it on the main branch.</p>
<pre><code>git checkout main
git checkout -b apply-hotfix</code></pre>
<p>Then we can fix our history using the rebase command</p>
<pre><code>git rebase hotfix</code></pre>
<p>What this does is it rolls back to the point where the branch that we are rebasing (<code>apply-hotfix</code>) and the <code>hotfix</code> branch both share a common commit (<code>v0.2.0</code> tag). It then applies the commits in the <code>hotfix</code> branch, before reapplying the commits from <code>apply-hotfix</code> (a.k.a. the <code>main</code> branch).</p>
<p>One thing to note, if you have any merge conflicts created by your fix, then the rebase will stop and ask you to fix the merge conflicts. There is some information in the GitHub doc‚Äôs for [resolving merge conflicts after a Git rebase][2].</p>
<p>[2]: https://docs.github.com/en/get-started/using-git/resolving-merge-conflicts-after-a-git-rebase</p>
<p>At this point, we can check that the commit history looks correct</p>
<pre><code>git log v0.2.0..HEAD</code></pre>
<p>If we are happy, then we can apply this to the <code>main</code> branch. I do this by renaming the <code>apply-hotfix</code> branch as <code>main</code>. First, you have to delete the <code>main</code> branch to allow us to rename the branch.</p>
<pre><code>git branch -D main
git branch -m main</code></pre>
<p>We also need to update the other branches to use the new main branch</p>
<pre><code>git checkout branch
git rebase main</code></pre>
<p>Now, we should have a history like</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://the-strategy-unit.github.io/data_science/blogs/posts/2023-03-24_hotfix-with-git/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>git</category>
  <category>tutorial</category>
  <guid>https://the-strategy-unit.github.io/data_science/blogs/posts/2023-03-24_hotfix-with-git/</guid>
  <pubDate>Fri, 24 Mar 2023 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
